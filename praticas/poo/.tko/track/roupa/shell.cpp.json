{
    "patches": [
        {
            "label": "2025-01-02_16-16-35",
            "content": "@@ -75,227 +75,8 @@\n td;%0A\n-#include %22fn.hpp%22%0A%0Aclass Roupa%0A%7B%0Aprivate:%0A    /* data */%0A    std::string tamanho;%0A    %0Apublic:%0A    Roupa(/* args */);%0A    ~Roupa();%0A%0A    std::string str()%7B%0A        return fn::format(%22size: (%7B%7D)%22, tamanho);%0A    %7D;%0A%0A%7D;%0A%0A%0A\n %0Aint\n"
        },
        {
            "label": "2025-01-02_16-24-10",
            "content": "@@ -70,16 +70,34 @@\n ace std;\n+%0A#include %22fn.hpp%22\n %0A%0Aclass \n@@ -208,20 +208,27 @@\n );%0A%0A    \n-void\n+std::string\n  str()%7B%0A\n@@ -239,36 +239,47 @@\n     \n-cout %3C%3C \n+return fn::format(\n %22size: \n-%7B%22 %3C%3C\n+(%7B%7D)%22,\n  tamanho\n  %3C%3C \n@@ -278,310 +278,17 @@\n anho\n- %3C%3C %22%7D%5Cn%22;%0A    %7D;%0A%0A    void put_tam(string val)%7B%0A        if (%0A            val != %22PP%22 &&%0A            val != %22P%22 &&%0A            val != %22M%22 &&%0A            val != %22G%22 &&%0A            val != %22GG%22 &&%0A            val != %22XG%22 &&%0A        %0A        )%0A        %7B%0A            cout %3C%3C %22fail:%22%0A        %7D%0A        %0A    %7D\n+);%0A    %7D;\n %0A%0A%7D;\n"
        },
        {
            "label": "2025-01-02_16-25-22",
            "content": "@@ -515,17 +515,16 @@\n  %22fail:%22\n-;\n %0A       \n"
        },
        {
            "label": "2025-01-02_16-25-29",
            "content": "@@ -455,16 +455,19 @@\n  != %22XG%22\n+ &&\n %0A       \n"
        },
        {
            "label": "2025-01-02_16-25-43",
            "content": "@@ -591,34 +591,8 @@\n QUI%0A\n-    Roupa vestimeta;%0A    %0A\n     \n@@ -814,24 +814,27 @@\n %0A           \n+ //\n  string size\n@@ -842,24 +842,27 @@\n %0A           \n+ //\n  ss %3E%3E size;\n@@ -866,45 +866,8 @@\n ze;%0A\n-            vestimeta.put_tam(size);%0A\n     \n@@ -937,33 +937,8 @@\n ETO%0A\n-        vestimeta.str();%0A\n     \n"
        },
        {
            "label": "2025-01-02_16-28-01",
            "content": "@@ -148,16 +148,54 @@\n public:%0A\n+    Roupa(/* args */);%0A    ~Roupa();%0A%0A\n     void\n"
        },
        {
            "label": "2025-01-02_16-28-14",
            "content": "@@ -187,17 +187,17 @@\n  %22size: \n-(\n+%7B\n %22 %3C%3C tam\n@@ -205,17 +205,17 @@\n nho %3C%3C %22\n-)\n+%7D\n %5Cn%22;%0A   \n"
        },
        {
            "label": "2025-01-02_16-28-33",
            "content": "@@ -477,52 +477,8 @@\n ail:\n- Valor inv%C3%A1lido, tente PP, P, M, G, GG ou XG\n %22;%0A \n"
        },
        {
            "label": "2025-01-02_16-28-53",
            "content": "@@ -518,24 +518,16 @@\n G ou XG%22\n- %3C%3C endl\n ;%0A      \n"
        },
        {
            "label": "2025-01-02_16-29-11",
            "content": "@@ -541,33 +541,8 @@\n    %7D\n-%0A%0A        val %3E%3E tamanho;\n %0A   \n"
        },
        {
            "label": "2025-01-02_16-29-42",
            "content": "@@ -546,24 +546,31 @@\n %0A       \n+ val %3E%3E\n  tamanho\n  = val;%0A\n@@ -565,14 +565,8 @@\n anho\n- = val\n ;%0A  \n"
        },
        {
            "label": "2025-01-02_16-29-57",
            "content": "@@ -532,28 +532,8 @@\n dl;%0A\n-            return;%0A\n     \n"
        },
        {
            "label": "2025-01-02_16-30-09",
            "content": "#include <iostream>\n#include <vector>\n#include <sstream>\nusing namespace std;\n\nclass Roupa\n{\nprivate:\n    /* data */\n    std::string tamanho;\n    \npublic:\n    void str(){\n        cout << \"size: (\" << tamanho << \")\\n\";\n    };\n\n    void put_tam(string val){\n        if (\n            val != \"PP\" &&\n            val != \"P\" &&\n            val != \"M\" &&\n            val != \"G\" &&\n            val != \"GG\" &&\n            val != \"XG\"\n        \n        )\n        {\n            cout << \"fail: Valor inv\u00e1lido, tente PP, P, M, G, GG ou XG\" << endl;\n            return;\n        }\n\n        tamanho = val;\n        \n    }\n\n};\n\n\n\nint main() {\n    // CRIE SEU OBJETO AQUI\n    Roupa vestimeta;\n    \n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"size\") { // TENTE ATRIBUIR UM TAMANHO\n            string size;\n            ss >> size;\n            vestimeta.put_tam(size);\n        } else if (cmd == \"show\") { // MOSTRE AS INFORMA\u00c7\u00d5ES DO OBJETO\n        vestimeta.str();\n        } else if (cmd == \"end\") {\n            break;\n        } else {\n            cout << \"fail: Comando inv\u00e1lido\" << endl;\n        }\n    }\n}\n"
        }
    ]
}