{
    "patches": [
        {
            "label": "2024-11-07_04-41-15",
            "content": "@@ -723,16 +723,25 @@\n ,km:%7B%7D%22,\n+ tanque, \n passagei\n@@ -744,23 +744,16 @@\n ageiros,\n-tanque,\n  percorr\n"
        },
        {
            "label": "2024-11-07_04-42-20",
            "content": "@@ -44,47 +44,21 @@\n nque\n- = 0;%0A    int passageiros = 0;%0A    int \n+,passageiros,\n perc\n"
        },
        {
            "label": "2024-11-07_04-44-42",
            "content": "@@ -736,26 +736,21 @@\n ass:\n- \n %7B%7D,\n- \n gas:\n- \n %7B%7D,\n- \n km:\n- \n %7B%7D%22,\n"
        },
        {
            "label": "2024-11-07_04-45-37",
            "content": "@@ -440,34 +440,8 @@\n n%22;%0A\n-         passageiros = 2;%0A\n     \n"
        },
        {
            "label": "2024-11-07_04-46-18",
            "content": "@@ -359,17 +359,17 @@\n ageiros \n-%3E\n+=\n = 2)%0A   \n@@ -687,18 +687,18 @@\n sageiros\n---\n+++\n ;%0A    %7D%0A\n"
        },
        {
            "label": "2024-11-07_04-47-38",
            "content": "@@ -1485,17 +1485,17 @@\n vazio ap\n-o\n+%C3%B3\n s andar \n@@ -1513,18 +1513,16 @@\n  %3C%3C %22 km\n-%5Cn\n %22;%0A     \n"
        },
        {
            "label": "2024-11-07_04-48-42",
            "content": "@@ -1522,30 +1522,8 @@\n n%22;%0A\n-              return;%0A\n     \n"
        },
        {
            "label": "2024-11-07_04-49-45",
            "content": "@@ -121,16 +121,66 @@\n 100L max\n+%0A    std::string especie;%0A    std::string barulho;\n %0A%0A    /*\n"
        },
        {
            "label": "2024-11-29_13-35-06",
            "content": "@@ -25,184 +25,180 @@\n  Car\n- %7B%0A%0A    public:%0A%0A    int pass;%0A    int passMax;%0A    int gas;%0A    int gasMax;%0A    int km;%0A%0A    Car(int p = 0, int pM = 2, int g = 0, int gM = 100, int km = 0) %7B%0A        pass = p\n+ro%0A%7B%0A    int tanque = 0;%0A    int passageiros = 0;%0A    int percorrido = 0; // 2 pessoas max, 100L max%0A%0A    /* data */%0Apublic:%0A%0A    void init()%0A    %7B%0A        this-%3Etanque = 0\n ;%0A  \n@@ -207,20 +207,29 @@\n     \n-passMax = pM\n+this-%3Epassageiros = 0\n ;%0A  \n@@ -238,114 +238,109 @@\n     \n-gas = g\n+this-%3Epercorrido = 0\n ;%0A    \n+%7D%0A\n     \n-gasMax = gM;%0A        this -%3E km = km;%0A        %0A    %7D %0A%0A    std::string show () %7B%0A\n+%0A    void enter()%7B%0A        if (passageiros %3E= 2)%0A        %7B%0A%0A   \n       \n-  \n std:\n@@ -353,118 +353,101 @@\n %3C%3C %22\n-pass: %22 %3C%3C pass %3C%3C %22gas: %22 %3C%3C gas %3C%3C %22km: %22 %3C%3C km\n+fail: limite de pessoas atingido%5Cn%22;%0A         passageiros = 2\n ;%0A    \n-%7D%0A%0A\n     \n-void enter() %7B%0A\n+ return; \n   \n+%0A\n       \n-if(pass %3C passMax) %7B%0A  \n   \n+%7D%0A\n     \n@@ -458,16 +458,23 @@\n pass\n+ageiros\n ++;%0A    \n     \n@@ -473,163 +473,175 @@\n     \n+%7D%0A%0A\n     \n-%7D%0A        else %7B%0A            std::cout %3C%3C %22fail: limite de pessoas atingido%22;%0A        %7D%0A    %7D%0A%0A    void leave() %7B%0A\n+void leave()%7B%0A        if (passageiros == 0)%0A        %7B%0A%0A         std::cout %3C%3C %22fail: nao ha ninguem no carro%5Cn%22;%0A         return; \n   \n+%0A\n       \n-if(pass %3E 0)%7B%0A            pas\n+  %7D%0A        passageiro\n s--;\n@@ -649,96 +649,125 @@\n     \n-    \n %7D\n+%0A\n %0A    \n-    else %7B%0A            std::cout %3C%3C %22fail: nao ha ninguem no carro%22;%0A        %7D\n+std::string str()%0A    %7B%0A        return fn::format(%22pass: %7B%7D, gas: %7B%7D, km: %7B%7D%22,passageiros,tanque, percorrido);\n %0A   \n@@ -784,28 +784,30 @@\n id fuel(int \n-g) %7B\n+qtd)%7B%0A\n %0A        if(\n@@ -810,29 +810,43 @@\n  if(\n-(gas + g) %3C= gasMax)%7B\n+%0A            (tanque + qtd) %3E= 100 \n %0A   \n@@ -854,31 +854,36 @@\n     \n+)%7B%0A\n     \n-gas += g;%0A        %7D\n+        tanque = 100;\n %0A   \n@@ -879,37 +879,37 @@\n  = 100;%0A        \n+%7D\n else\n- \n %7B%0A            ga\n@@ -910,20 +910,29 @@\n     \n-gas = gasMax\n+tanque = tanque + qtd\n ;%0A  \n@@ -934,24 +934,34 @@\n d;%0A        %7D\n+%0A%0A        \n %0A    %7D%0A%0A    \n@@ -979,28 +979,14 @@\n int \n-k, int g)%7B%0A%0A        \n+dist)%7B\n %0A   \n@@ -1001,15 +1001,21 @@\n pass\n+ageiros\n  == 0)\n- \n %7B%0A  \n@@ -1049,20 +1049,20 @@\n l: n\n-%C3%A3o h%C3%A1\n+ao ha\n  ningu\n-%C3%A9\n+e\n m no\n@@ -1067,19 +1067,41 @@\n no carro\n+%5Cn\n %22;%0A\n+            return;%0A\n         \n@@ -1117,21 +1117,34 @@\n  if(\n-(gas == 0)) %7B\n+tanque == 0)%7B%0A            \n %0A   \n@@ -1184,16 +1184,18 @@\n ue vazio\n+%5Cn\n %22;%0A     \n@@ -1201,90 +1201,88 @@\n     \n-%7D%0A%0A        int distMax = g; //supondo que consuma gas proporcional ao km%0A%0A\n+    return;%0A        %7D%0A%0A        int avanco = 0;%0A        while(dist)%7B%0A    \n         \n if(d\n@@ -1281,51 +1281,86 @@\n     \n-if(\n dist\n-Max %3C k)%7B%0A            km += distMax;\n+--;%0A            tanque--;%0A            percorrido++;%0A            avanco++;%0A\n %0A   \n@@ -1372,15 +1372,27 @@\n     \n-g\n+if(tanque\n  =\n+=\n  0\n-;%0A\n+)%7B%0A  \n     \n@@ -1403,32 +1403,33 @@\n     std::cout %3C%3C\n+ \n  %22fail: tanque v\n@@ -1439,17 +1439,17 @@\n o ap\n-%C3%B3\n+o\n s andar \n %7Bqtd\n@@ -1448,43 +1448,31 @@\n dar \n-%7Bqtd%7D km%22;%0A        %7D%0A        else %7B\n+%22 %3C%3C avanco %3C%3C %22 km%5Cn%22;\n %0A   \n@@ -1484,15 +1484,16 @@\n     \n-km += k\n+  return\n ;%0A  \n@@ -1506,15 +1506,10 @@\n     \n-g -= g;\n+%7D%0A\n %0A   \n@@ -1520,21 +1520,20 @@\n  %7D%0A%0A\n+%0A\n     %7D%0A%0A\n-%0A\n %7D;%0A%0A\n-%0A\n stru\n@@ -1549,20 +1549,17 @@\n t %7B%0A\n-    %0A\n     Car\n+ro\n  car\n@@ -1575,11 +1575,11 @@\n dent\n- \n ()\n+ \n %7B%7D%0A%0A\n@@ -1763,16 +1763,9 @@\n int \n-k, int g\n+q\n ) %7B%0A\n@@ -1786,12 +1786,9 @@\n ive(\n-k, g\n+q\n );%0A \n@@ -1856,19 +1856,18 @@\n %3C%3C car.s\n-how\n+tr\n () %3C%3C st\n@@ -2186,28 +2186,29 @@\n vado%22 %3C%3C std::endl;%0A    %7D%0A%7D;\n+%0A\n"
        },
        {
            "label": "2025-03-01_00-14-17",
            "content": "@@ -1726,18 +1726,44 @@\n     \n-car.show()\n+std::cout %3C%3C car.show() %3C%3C std::endl\n ;%0A  \n"
        },
        {
            "label": "2025-03-01_00-16-56",
            "content": "@@ -15,27 +15,8 @@\n pp%22%0A\n-#include %22string.h%22\n %0Acla\n@@ -334,18 +334,16 @@\n %0A       \n-//\n  std::co\n@@ -404,147 +404,8 @@\n km;%0A\n-        std::string saida = %22pass: %22;%0A        saida += std::to_string(pass) + %22gas: %22 + std::to_string(gas) + %22km: %22 + std::to_string(km);%0A\n     \n@@ -1726,44 +1726,18 @@\n     \n-std::cout %3C%3C car.show() %3C%3C std::endl\n+car.show()\n ;%0A  \n"
        },
        {
            "label": "2025-03-01_00-22-25",
            "content": "@@ -564,30 +564,8 @@\n m);%0A\n-        return saida;%0A\n     \n"
        },
        {
            "label": "2025-03-01_00-22-40",
            "content": "@@ -1086,32 +1086,20 @@\n ive(\n-double k, double g = 100\n+int k, int g\n )%7B%0A%0A\n@@ -1816,16 +1816,23 @@\n ve(int k\n+, int g\n ) %7B%0A    \n@@ -1846,16 +1846,19 @@\n .drive(k\n+, g\n );%0A     \n"
        },
        {
            "label": "2025-03-01_00-27-59",
            "content": "@@ -457,17 +457,35 @@\n %22pass: %22\n-+\n+;%0A        saida += \n std::to_\n"
        },
        {
            "label": "2025-03-01_00-28-43",
            "content": "@@ -482,18 +482,16 @@\n ass) + %22\n-, \n gas: %22 +\n@@ -514,18 +514,16 @@\n gas) + %22\n-, \n km: %22 + \n"
        },
        {
            "label": "2025-03-01_00-29-01",
            "content": "@@ -15,190 +15,213 @@\n pp%22%0A\n-%0Aclass Carro%0A%7B%0A    int tanque = 0;%0A    int passageiros = 0;%0A    int percorrido = 0; // 2 pessoas max, 100L max%0A%0A    /* data */%0Apublic:%0A%0A    void init()%0A    %7B%0A        this-%3Etanque = 0\n+#include %22string.h%22%0Aclass Car %7B%0A%0A    public:%0A%0A    int pass;%0A    int passMax;%0A    int gas;%0A    int gasMax;%0A    int km;%0A%0A    Car(int p = 0, int pM = 2, int g = 0, int gM = 100, int km = 0) %7B%0A        pass = p\n ;%0A  \n@@ -230,29 +230,20 @@\n     \n-this-%3Epassageiros = 0\n+passMax = pM\n ;%0A  \n@@ -252,108 +252,115 @@\n     \n-this-%3Epercorrido = 0\n+gas = g\n ;%0A    \n-%7D\n+    gasMax = gM;\n %0A    \n-%0A\n     \n-void enter()%7B%0A        if (passageiros %3E= 2)%0A       \n+this -%3E km = km;%0A        %0A    %7D %0A%0A    std::string show ()\n  %7B%0A\n-%0A \n        \n+//\n  std\n@@ -374,122 +374,204 @@\n %3C%3C %22\n-fail: limite de pessoas atingido%5Cn%22;%0A         passageiros = 2;%0A         return;   %0A        %7D%0A        passageiros++\n+pass: %22 %3C%3C pass %3C%3C %22gas: %22 %3C%3C gas %3C%3C %22km: %22 %3C%3C km;%0A        std::string saida = %22pass: %22+std::to_string(pass) + %22, gas: %22 + std::to_string(gas) + %22, km: %22 + std::to_string(km);%0A        return saida\n ;%0A  \n@@ -584,23 +584,24 @@\n    void \n-leave\n+enter\n ()\n+ \n %7B%0A      \n@@ -608,192 +608,248 @@\n   if\n- \n (pass\n-ageiros == 0)%0A        %7B%0A%0A         std::cout %3C%3C %22fail: nao ha ninguem no carro%5Cn%22;%0A         return; \n+ %3C passMax) %7B%0A            pass++;%0A        %7D%0A        else %7B%0A            std::cout %3C%3C %22fail: limite de pessoas atingido%22;%0A        %7D%0A    %7D%0A%0A    void leave() %7B%0A\n   \n-%0A\n       \n-  %7D%0A        passageiros--;%0A    %7D%0A%0A    std::string str()\n+if(pass %3E 0)%7B%0A            pass--;%0A        %7D%0A        else %7B\n %0A    \n-%7B%0A\n         \n retu\n@@ -848,86 +848,63 @@\n     \n-return fn::format(%22pass: %7B%7D, gas: %7B%7D, km: %7B%7D%22,passageiros,tanque, percorrido);\n+std::cout %3C%3C %22fail: nao ha ninguem no carro%22;%0A        %7D\n %0A   \n@@ -929,14 +929,12 @@\n int \n-qtd)%7B%0A\n+g) %7B\n %0A   \n@@ -945,43 +945,29 @@\n  if(\n-%0A            (tanque + qtd) %3E= 100 \n+(gas + g) %3C= gasMax)%7B\n %0A   \n@@ -975,36 +975,31 @@\n     \n-)%7B%0A\n     \n-        tanque = 100;\n+gas += g;%0A        %7D\n %0A   \n@@ -1007,13 +1007,13 @@\n     \n-%7D\n else\n+ \n %7B%0A  \n@@ -1026,29 +1026,20 @@\n     \n-tanque = tanque + qtd\n+gas = gasMax\n ;%0A  \n@@ -1045,26 +1045,16 @@\n        %7D\n-%0A%0A        \n %0A    %7D%0A%0A\n@@ -1072,18 +1072,44 @@\n ive(\n-int dist)%7B\n+double k, double g = 100)%7B%0A%0A        \n %0A   \n@@ -1124,21 +1124,15 @@\n pass\n-ageiros\n  == 0)\n+ \n %7B%0A  \n@@ -1158,36 +1158,36 @@\n  %3C%3C %22fail: n\n-ao ha\n+%C3%A3o h%C3%A1\n  ningu\n-e\n+%C3%A9\n m no carro%5Cn\n@@ -1184,18 +1184,16 @@\n no carro\n-%5Cn\n %22;%0A     \n@@ -1199,67 +1199,34 @@\n     \n-    return;%0A        %7D%0A        if(tanque == 0)%7B%0A            \n+%7D%0A        if((gas == 0)) %7B\n %0A   \n@@ -1266,18 +1266,16 @@\n ue vazio\n-%5Cn\n %22;%0A     \n@@ -1281,86 +1281,90 @@\n     \n-    return;%0A        %7D%0A%0A        int avanco = 0;%0A        while(dist)%7B%0A  \n+%7D%0A%0A        int distMax = g; //supondo que consuma gas proporcional ao km%0A%0A\n         \n   di\n@@ -1363,17 +1363,24 @@\n     \n-  \n+if(\n dist\n---;\n+Max %3C k)%7B\n %0A   \n@@ -1392,66 +1392,22 @@\n     \n-tanque--;%0A            percorrido++;%0A            avanco++;%0A\n+km += distMax;\n %0A   \n@@ -1419,24 +1419,14 @@\n     \n-if(tanque == 0)%7B\n+g = 0;\n %0A   \n@@ -1426,34 +1426,32 @@\n  0;%0A            \n-  \n std::cout %3C%3C  %22f\n@@ -1446,17 +1446,16 @@\n :cout %3C%3C\n- \n  %22fail: \n@@ -1473,17 +1473,17 @@\n o ap\n-o\n+%C3%B3\n s andar \n %22 %3C%3C\n@@ -1482,31 +1482,43 @@\n dar \n-%22 %3C%3C avanco %3C%3C %22 km%5Cn%22;\n+%7Bqtd%7D km%22;%0A        %7D%0A        else %7B\n %0A   \n@@ -1526,24 +1526,23 @@\n         \n-  return\n+km += k\n ;%0A      \n@@ -1539,34 +1539,39 @@\n  k;%0A            \n-%7D%0A\n+g -= g;\n %0A        %7D%0A%0A%0A   \n@@ -1570,20 +1570,21 @@\n  %7D%0A%0A\n-%0A\n     %7D%0A%0A\n+%0A\n %7D;%0A%0A\n+%0A\n stru\n@@ -1600,17 +1600,20 @@\n t %7B%0A\n+    %0A\n     Car\n-ro\n  car\n@@ -1625,19 +1625,19 @@\n  Student\n+ \n ()\n- \n %7B%7D%0A%0A    \n@@ -1809,25 +1809,25 @@\n d drive(int \n-q\n+k\n ) %7B%0A        \n@@ -1836,17 +1836,17 @@\n r.drive(\n-q\n+k\n );%0A     \n@@ -1910,18 +1910,19 @@\n %3C%3C car.s\n-tr\n+how\n () %3C%3C st\n@@ -2241,29 +2241,28 @@\n vado%22 %3C%3C std::endl;%0A    %7D%0A%7D;\n-%0A\n"
        },
        {
            "label": "2025-03-01_00-32-37",
            "content": "#include \"fn.hpp\"\n\nclass Carro\n{\n    int tanque = 0;\n    int passageiros = 0;\n    int percorrido = 0; // 2 pessoas max, 100L max\n\n    /* data */\npublic:\n\n    void init()\n    {\n        this->tanque = 0;\n        this->passageiros = 0;\n        this->percorrido = 0;\n    }\n    \n    void enter(){\n        if (passageiros >= 2)\n        {\n\n         std::cout << \"fail: limite de pessoas atingido\\n\";\n         passageiros = 2;\n         return;   \n        }\n        passageiros++;\n    }\n\n    void leave(){\n        if (passageiros == 0)\n        {\n\n         std::cout << \"fail: nao ha ninguem no carro\\n\";\n         return;   \n        }\n        passageiros--;\n    }\n\n    std::string str()\n    {\n        return fn::format(\"pass: {}, gas: {}, km: {}\",passageiros,tanque, percorrido);\n    }\n\n    void fuel(int qtd){\n\n        if(\n            (tanque + qtd) >= 100 \n        ){\n            tanque = 100;\n        }else{\n            tanque = tanque + qtd;\n        }\n\n        \n    }\n\n    void drive(int dist){\n        if(passageiros == 0){\n            std::cout << \"fail: nao ha ninguem no carro\\n\";\n            return;\n        }\n        if(tanque == 0){\n            \n            std::cout << \"fail: tanque vazio\\n\";\n            return;\n        }\n\n        int avanco = 0;\n        while(dist){\n            dist--;\n            tanque--;\n            percorrido++;\n            avanco++;\n\n            if(tanque == 0){\n              std::cout <<  \"fail: tanque vazio apos andar \" << avanco << \" km\\n\";\n              return;\n            }\n\n        }\n\n\n    }\n\n};\n\nstruct Student {\n    Carro car;\n    Student() {}\n\n    void enter() {\n        car.enter();\n    }\n    void leave() {\n        car.leave();\n    }\n    void fuel(int q) {\n        car.fuel(q);\n        //(void) q;\n    }\n    void drive(int q) {\n        car.drive(q);\n        //(void) q;\n    }\n    void show() {\n        std::cout << car.str() << std::endl;\n    }\n};\n\nstruct Debug {\n    // Se a vari\u00e1vel debug for true, os testes n\u00e3o ser\u00e3o executados\n    // Apenas o conte\u00fado do m\u00e9todo run() ser\u00e1 executado\n    // Voc\u00ea pode usar isso para testar seu c\u00f3digo manualmente\n    static const bool debug = false;\n    static void run() {\n        std::cout << \"Debug ativado\" << std::endl;\n    }\n};\n"
        }
    ]
}