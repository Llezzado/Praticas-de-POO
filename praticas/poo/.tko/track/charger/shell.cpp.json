{
    "patches": [
        {
            "label": "2024-12-12_10-16-22",
            "content": "@@ -73,3513 +73,8 @@\n p%22%0A%0A\n-%0Aclass Bateria%0A%7B%0Aprivate:%0A    int carga_max,carga_atual;%0A    bool tem_carga;%0Apublic:%0A    %0A    Bateria(int max = 50, int atual = 50)%7B%0A        this-%3Ecarga_max = max;%0A        this-%3Ecarga_atual = atual;%0A        tem_carga = true;%0A    %7D%0A%0A    void set_Bateria(int max)%7B%0A%0A        this-%3Ecarga_max = max;%0A        this-%3Ecarga_atual = max;%0A        this-%3Etem_carga = true;%0A    %7D %0A%0A    void gastar(int x)%7B%0A        carga_atual -= x;%0A        if (carga_atual %3C= 0)%0A        %7B%0A            carga_atual = 0;%0A            std::cout %3C%3C %22fail: descarregou%5Cn%22;%0A            tem_carga = false;%0A        %7D%0A        %0A    %7D%0A%0A    bool carga_chk()%7B%0A        return tem_carga;%0A    %7D%0A%0A    void recarregar(int x)%7B%0A        carga_atual += x;%0A        if (carga_atual %3E carga_max)%0A        %7B%0A            carga_atual = carga_max;%0A        %7D%0A                %0A    %7D%0A%0A    void str()%7B%0A        std::cout %3C%3C carga_atual %3C%3C %22/%22 %3C%3C carga_max;%0A    %7D%0A%0A%7D;%0A%0Aclass Carregador%0A%7B%0Aprivate:%0A    int charger = 0;%0Apublic:%0A    Carregador(/* args */);%0A%0A%7D;%0A%0A%0A%0Aclass Notebook%0A%7B%0Aprivate:%0A%0A    std::shared_ptr%3CBateria%3E Pilha %7Bnullptr%7D;%0A    bool esta_ligado,tem_bateria;%0A    int charger,tempo;%0Apublic:%0A    %0A    Notebook()%7B%0A        esta_ligado = false;%0A        tem_bateria = false;%0A        charger = 0;%0A        tempo = 0;%0A    %7D;%0A%0A%0A    void turn_off()%7B esta_ligado = 0;%7D%0A%0A    void turn_on()%7B%0A        %0A        if (%0A            (charger == 0) &&%0A            (!tem_bateria)%0A            %0A            )%0A        %7B%0A            std::cout %3C%3C %22fail: n%C3%A3o foi poss%C3%ADvel ligar%5Cn%22;%0A            return;%0A        %7D%0A        %0A        %0A        esta_ligado = 1;%0A        %7D%0A    %0A    void str()%7B%0A        std::cout %3C%3C %22Notebook: %22;%0A%0A        if (esta_ligado)%0A        %7B%0A            std::cout %3C%3C %22ligado por %22 %3C%3C tempo %3C%3C %22 min%22;%0A        %0A        %7Delse%7B%0A%0A            std::cout %3C%3C %22desligado%22;%0A        %7D%0A        %0A%0A        %0A%0A        if (charger)%0A        %7B%0A            std::cout %3C%3C %22, Carregador %22 %3C%3C charger %3C%3C %22W%22;%0A        %7D%0A        %0A        if (tem_bateria)%0A        %7B%0A            std::cout %3C%3C %22, Bateria %22;%0A            Pilha-%3Estr();%0A            %0A%0A        %7D%0A%0A        std::cout %3C%3C %22%5Cn%22;%0A        //Pilha-%3Estr();%0A    %7D%0A%0A    void use(int x)%7B%0A        %0A        if (!esta_ligado)%0A        %7B%0A            std::cout %3C%3C %22fail: desligado%5Cn%22;%0A            return;%0A        %7D%0A%0A        tempo += x;%0A%0A%0A        if (charger)%0A        %7B%0A            Pilha-%3Erecarregar(x*charger);            %0A        %7Delse%0A        %7B%0A            Pilha-%3Egastar(x);%0A        %7D%0A%0A        if (Pilha-%3Ecarga_chk() == false)%0A        %7B%0A            esta_ligado = false;%0A        %7D%0A        %0A%0A       //Pilha-%3Egastar(x);%0A    %7D%0A%0A    void set_bateria(std::shared_ptr%3CBateria%3E pilha)%7B%0A        this-%3EPilha = pilha;%0A        tem_bateria = true;%0A    %7D%0A%0A    void rm_bateria()%7B%0A        %0A        if (!tem_bateria)%0A        %7B%0A            std::cout %3C%3C %22fail: Sem bateria%5Cn%22;%0A            return;%0A        %7D%0A        %0A        std::cout %3C%3C %22Removido %22;%0A        Pilha-%3Estr();%0A        std::cout %3C%3C %22%5Cn%22;%0A        tem_bateria = false;%0A%0A        if (!charger)%0A        %7B%0A            esta_ligado = false;%0A        %7D%0A        %0A%0A    %7D%0A%0A    void set_charger(int x)%7B%0A%0A        if (charger)%0A        %7B%0A            std::cout %3C%3C %22fail: carregador j%C3%A1 conectado%5Cn%22;%0A            return;%0A        %7D%0A        %0A%0A        charger = x;%0A    %7D%0A%0A    void rm_charger()%7B%0A%0A        if (!charger)%0A        %7B%0A            std::cout %3C%3C %22fail: Sem carregador%5Cn%22;%0A            return;%0A        %7D%0A        %0A        std::cout %3C%3C %22Removido %22 %3C%3C charger %3C%3C %22W%5Cn%22;%0A        %0A%0A        charger = 0;%0A        esta_ligado = false;%0A    %7D%0A%0A%7D;%0A%0A%0A\n clas\n@@ -88,16 +88,19 @@\n er %7B%0A   \n+ //\n  Noteboo\n@@ -141,32 +141,8 @@\n ) %7B%0A\n-        notebook.str();%0A\n     \n@@ -212,32 +212,35 @@\n n_on() %7B%0A       \n+ //\n  notebook.turn_o\n@@ -272,32 +272,35 @@\n _off() %7B%0A       \n+ //\n  notebook.turn_o\n@@ -358,84 +358,65 @@\n     \n-notebook.set_charger(\n+(void) \n power\n-)\n ;%0A    \n-%7D%0A\n     \n-void rm_charger() %7B\n+//TODO: Implementar\n %0A    \n+%7D%0A\n     \n-notebook.\n+void \n rm_c\n@@ -423,18 +423,18 @@\n harger()\n-;%0A\n+ %7B\n %0A       \n@@ -720,101 +720,23 @@\n     \n-auto bateria_0 = std::make_shared%3CBateria%3E(capacity);%0A        notebook.set_bateria(bateria_0)\n+(void) capacity\n ;%0A  \n@@ -796,39 +796,8 @@\n ) %7B%0A\n-        notebook.rm_bateria();%0A\n     \n@@ -1063,24 +1063,47 @@\n utes) %7B%0A\n+        (void) minutes;\n %0A       \n  noteboo\n@@ -1094,16 +1094,19 @@\n %0A       \n+ //\n  noteboo\n@@ -1144,17 +1144,16 @@\n ain() %7B%0A\n-%0A\n     Adap\n"
        },
        {
            "label": "2024-12-12_10-30-25",
            "content": "@@ -2351,48 +2351,8 @@\n ;%0A%0A%0A\n-        if (tem_bateria)%0A        %7B%0A%0A    \n     \n@@ -2372,34 +2372,26 @@\n er)%0A        \n-    %7B%0A    \n+%7B%0A\n             \n@@ -2436,28 +2436,24 @@\n    %0A        \n-   \n- \n %7Delse%0A      \n@@ -2450,34 +2450,26 @@\n lse%0A        \n-    %7B%0A    \n+%7B%0A\n             \n@@ -2486,20 +2486,16 @@\n tar(x);%0A\n-    \n         \n@@ -2500,146 +2500,8 @@\n   %7D%0A\n-            %0A        %7D%0A        %0A        if (!charger)%0A        %7B%0A            std::cout %3C%3C %22error%22;%0A            return;%0A        %7D%0A        %0A%0A\n %0A   \n"
        },
        {
            "label": "2024-12-12_10-46-35",
            "content": "@@ -2577,118 +2577,8 @@\n    %0A\n-            if (Pilha-%3Ecarga_chk() == false)%0A            %7B%0A                esta_ligado = false;%0A            %7D%0A\n     \n@@ -2699,16 +2699,110 @@\n      %0A%0A%0A\n+        if (Pilha-%3Ecarga_chk() == false)%0A        %7B%0A            esta_ligado = false;%0A        %7D%0A\n         \n"
        },
        {
            "label": "2024-12-12_10-47-49",
            "content": "@@ -2688,24 +2688,148 @@\n  %7D%0A        %7D\n+%0A        %0A        if (!charger)%0A        %7B%0A            std::cout %3C%3C %22error%22;%0A            return;%0A        %7D%0A        %0A%0A%0A       \n  %0A%0A       //\n@@ -3263,33 +3263,32 @@\n rger)%0A        %7B%0A\n-%0A\n             esta\n"
        },
        {
            "label": "2024-12-12_10-59-28",
            "content": "@@ -1016,34 +1016,12 @@\n rger\n-;%0A    bool esta_carregando\n+ = 0\n ;%0Apu\n@@ -1026,17 +1026,16 @@\n public:%0A\n-%0A\n     Carr\n@@ -3201,17 +3201,16 @@\n       %0A%0A\n-%0A\n     %7D%0A%0A \n@@ -4363,23 +4363,17 @@\n bateria_\n-externa\n+0\n  = std::\n@@ -4445,15 +4445,9 @@\n ria_\n-externa\n+0\n );%0A \n@@ -4531,25 +4531,24 @@\n _bateria();%0A\n-%0A\n         // a\n"
        },
        {
            "label": "2024-12-12_11-25-50",
            "content": "@@ -1068,404 +1068,21 @@\n dor(\n-)%7B%0A        charger = 0;%0A        esta_carregando = false;%0A    %7D;%0A%0A    void set_charger(int x)%7B%0A        charger = x;%0A%0A        if (charger)%0A        %7B%0A            esta_carregando = true;%0A        %7D%0A        %0A    %7D%0A%0A    int get_charger()%7B%0A        return charger;%0A    %7D%0A%0A    bool chk()%7B%0A        return esta_carregando;%0A%0A    %7D%0A%0A    void str()%7B%0A        std::cout %3C%3C %22, Carregador %22 %3C%3C charger %3C%3C %22W%22;%0A    %7D\n+/* args */);%0A\n %0A%7D;%0A\n@@ -1161,29 +1161,8 @@\n r%7D;%0A\n-    Carregador cabo;%0A\n     \n@@ -1199,16 +1199,24 @@\n     int \n+charger,\n tempo;%0Ap\n@@ -1293,32 +1293,53 @@\n ateria = false;%0A\n+        charger = 0;%0A\n         tempo = \n@@ -1445,34 +1445,23 @@\n        (\n-cabo.get_\n charger\n-()\n  == 0) &\n@@ -1910,38 +1910,37 @@\n         \n-if (cabo.get_\n+%0A%0A        if (\n charger\n-()\n )%0A      \n@@ -1959,18 +1959,54 @@\n     \n-cabo.str()\n+std::cout %3C%3C %22, Carregador %22 %3C%3C charger %3C%3C %22W%22\n ;%0A  \n@@ -2422,34 +2422,23 @@\n     if (\n-cabo.get_\n charger\n-()\n )%0A      \n@@ -2481,34 +2481,23 @@\n regar(x*\n-cabo.get_\n charger\n-()\n );      \n@@ -3151,34 +3151,23 @@\n    if (!\n-cabo.get_\n charger\n-()\n )%0A      \n@@ -3274,34 +3274,23 @@\n     if (\n-cabo.get_\n charger\n-()\n )%0A      \n@@ -3405,27 +3405,19 @@\n     \n-cabo.set_\n charger\n-(x)\n+ = x\n ;%0A  \n@@ -3458,34 +3458,23 @@\n    if (!\n-cabo.get_\n charger\n-()\n )%0A      \n@@ -3607,26 +3607,15 @@\n  %3C%3C \n-cabo.get_\n charger\n-()\n  %3C%3C \n@@ -3643,22 +3643,19 @@\n     \n-set_\n charger\n-(0)\n+ = 0\n ;%0A  \n"
        },
        {
            "label": "2024-12-12_11-37-53",
            "content": "@@ -1256,21 +1256,16 @@\n        %7D\n-else%7B\n %0A       \n@@ -1269,86 +1269,8 @@\n     \n-    esta_carregando = false;%0A        %7D%0A        %0A    %7D%0A%0A    void rm_charger()%7B%0A\n %0A   \n@@ -3866,19 +3866,27 @@\n  (!cabo.\n-chk\n+get_charger\n ())%0A    \n"
        },
        {
            "label": "2024-12-12_11-45-15",
            "content": "@@ -3939,24 +3939,25 @@\n         if (\n+!\n cabo.chk() =\n@@ -3950,33 +3950,24 @@\n (!cabo.chk()\n- == false\n )%0A        %7B%0A\n"
        },
        {
            "label": "2024-12-12_11-49-22",
            "content": "@@ -1260,48 +1260,18 @@\n    %7D\n+else%7B\n %0A    \n-    %0A    %7D%0A%0A    void rm_charger()%7B%0A\n     \n@@ -1303,36 +1303,65 @@\n se;%0A        \n+%7D%0A        %0A    %7D%0A%0A    void rm_\n charger\n- = 0;\n+()%7B%0A\n %0A    %7D%0A%0A    \n@@ -3953,16 +3953,25 @@\n bo.chk()\n+ == false\n )%0A      \n"
        },
        {
            "label": "2024-12-12_11-53-02",
            "content": "@@ -4143,15 +4143,11 @@\n     \n-cabo.rm\n+set\n _cha\n@@ -4147,24 +4147,25 @@\n set_charger(\n+0\n );%0A        e\n"
        },
        {
            "label": "2024-12-12_11-54-15",
            "content": "@@ -3940,25 +3940,24 @@\n         if (\n-!\n cabo.chk())%0A\n"
        },
        {
            "label": "2024-12-12_11-55-18",
            "content": "@@ -1628,32 +1628,16 @@\n r%7D;%0A    \n-std::shared_ptr%3C\n Carregad\n@@ -1642,24 +1642,13 @@\n ador\n-%3E\n  cabo\n- %7Bnullptr%7D\n ;%0A  \n@@ -1904,26 +1904,25 @@\n        (cabo\n--%3E\n+.\n get_charger(\n@@ -2380,34 +2380,33 @@\n         if (cabo\n--%3E\n+.\n get_charger())%0A \n@@ -2430,18 +2430,17 @@\n     cabo\n--%3E\n+.\n str();%0A \n@@ -2853,34 +2853,33 @@\n         if (cabo\n--%3E\n+.\n get_charger())%0A \n@@ -2927,26 +2927,25 @@\n regar(x*cabo\n--%3E\n+.\n get_charger(\n@@ -3608,26 +3608,25 @@\n    if (!cabo\n--%3E\n+.\n get_charger(\n@@ -3725,40 +3725,13 @@\n ger(\n-std::shared_ptr%3CCarregador%3E cabo\n+int x\n )%7B%0A%0A\n@@ -3742,26 +3742,25 @@\n     if (cabo\n--%3E\n+.\n get_charger(\n@@ -3884,25 +3884,27 @@\n     \n-this-%3Ecabo = cabo\n+cabo.set_charger(x)\n ;%0A  \n@@ -3949,18 +3949,17 @@\n f (!cabo\n--%3E\n+.\n chk())%0A \n@@ -4097,18 +4097,17 @@\n  %3C%3C cabo\n--%3E\n+.\n get_char\n@@ -4144,18 +4144,17 @@\n     cabo\n--%3E\n+.\n rm_charg\n@@ -4496,79 +4496,8 @@\n ) %7B%0A\n-        auto carregador_externo = std::make_shared%3CCarregador%3E(power);%0A\n     \n@@ -4525,26 +4525,13 @@\n ger(\n-carregador_externo\n+power\n );%0A \n"
        },
        {
            "label": "2024-12-12_12-00-38",
            "content": "@@ -1068,28 +1068,8 @@\n dor(\n-int x = 0,bool y = 0\n )%7B%0A \n"
        },
        {
            "label": "2024-12-12_12-02-58",
            "content": "@@ -1083,21 +1083,17 @@\n ool y = \n-false\n+0\n )%7B%0A     \n"
        },
        {
            "label": "2024-12-12_12-03-06",
            "content": "@@ -1109,17 +1109,17 @@\n arger = \n-x\n+0\n ;%0A      \n@@ -1138,17 +1138,21 @@\n gando = \n-y\n+false\n ;%0A    %7D;\n"
        },
        {
            "label": "2024-12-12_12-04-50",
            "content": "@@ -4359,26 +4359,16 @@\n     \n-fn::write(\n notebook\n );%0A \n@@ -4363,16 +4363,21 @@\n notebook\n+.str(\n );%0A     \n"
        },
        {
            "label": "2025-01-24_15-44-12",
            "content": "@@ -2199,31 +2199,89 @@\n     \n-std::string str() const\n+void str()%7B%0A        std::cout %3C%3C %22Notebook: %22;%0A%0A        if (esta_ligado)%0A        \n %7B%0A  \n@@ -2290,148 +2290,402 @@\n     \n+    \n std::\n-string nome(%22None%22);%0A        std::string cliente(%22None%22);%0A        return fn::format(%22Cost: %7B%7D, Driver: %7B%7D, Passenger: %7B%7D%22, nome,cliente\n+cout %3C%3C %22ligado por %22 %3C%3C tempo %3C%3C %22 min%22;%0A        %0A        %7Delse%7B%0A%0A            std::cout %3C%3C %22desligado%22;%0A        %7D%0A        %0A%0A        if (cabo-%3Eget_charger())%0A        %7B%0A            cabo-%3Estr();%0A        %7D%0A        %0A        if (tem_bateria)%0A        %7B%0A            std::cout %3C%3C %22, Bateria %22;%0A            Pilha-%3Estr();%0A            %0A%0A        %7D%0A%0A        std::cout %3C%3C %22%5Cn%22;%0A        //Pilha-%3Estr(\n );%0A \n"
        },
        {
            "label": "2025-01-24_15-46-03",
            "content": "@@ -4043,18 +4043,16 @@\n         \n-//\n fn::writ\n"
        },
        {
            "label": "2025-01-24_15-47-43",
            "content": "@@ -4035,32 +4035,34 @@\n how() %7B%0A        \n+//\n fn::write(notebo\n"
        },
        {
            "label": "2025-01-24_23-05-04",
            "content": "@@ -2181,24 +2181,215 @@\n 1;%0A        %7D\n+%0A    %0A    std::string str() const%7B%0A        std::string nome(%22None%22);%0A        std::string cliente(%22None%22);%0A        return fn::format(%22Cost: %7B%7D, Driver: %7B%7D, Passenger: %7B%7D%22, nome,cliente);%0A    %7D\n %0A%0A    void u\n@@ -3969,195 +3969,8 @@\n  %7D%0A%0A\n-    std::string str() const%7B%0A        std::string nome(%22None%22);%0A        std::string cliente(%22None%22);%0A        return fn::format(%22Cost: %7B%7D, Driver: %7B%7D, Passenger: %7B%7D%22, nome,cliente);%0A    %7D%0A%0A\n %7D;%0A%0A\n"
        },
        {
            "label": "2025-01-24_23-06-10",
            "content": "@@ -3969,105 +3969,8 @@\n %7D;%0A%0A\n-std::ostream& operator%3C%3C(std::ostream& os, const Notebook& note)%7B%0A    return os %3C%3C note.str();%0A%7D%0A\n %0Acla\n"
        },
        {
            "label": "2025-01-24_23-06-49",
            "content": "@@ -3918,16 +3918,31 @@\n  Driver:\n+ %7B%7D, Passenger:\n  %7B%7D%22, no\n"
        },
        {
            "label": "2025-01-24_23-07-22",
            "content": "@@ -3901,23 +3901,32 @@\n format(%22\n-Noteboo\n+Cost: %7B%7D, Driver\n : %7B%7D%22, n\n@@ -3928,16 +3928,24 @@\n %7D%22, nome\n+,cliente\n );%0A    %7D\n"
        },
        {
            "label": "2025-01-24_23-07-48",
            "content": "@@ -3827,38 +3827,30 @@\n ing \n-status(%22desligado\n+nome(%22None\n %22);%0A\n-%0A\n         \n if (\n@@ -3849,85 +3849,36 @@\n     \n-if (esta_ligado)%0A        %7B%0A            status = %22ligado%22;%0A        %7D%0A        %0A\n+std::string cliente(%22None%22);\n %0A   \n@@ -3908,17 +3908,16 @@\n %22Noteboo\n-k\n : %7B%7D%22, n\n"
        },
        {
            "label": "2025-01-24_23-09-18",
            "content": "@@ -3973,22 +3973,20 @@\n k: %7B%7D%22, \n-status\n+nome\n );%0A    %7D\n"
        },
        {
            "label": "2025-01-24_23-09-27",
            "content": "@@ -1919,146 +1919,8 @@\n n()%7B\n-%0A%0A        if (cabo == nullptr)%0A        %7B%0A            std::cout %3C%3C %22fail: n%C3%A3o foi poss%C3%ADvel ligar%5Cn%22;%0A            return;%0A        %7D%0A        \n %0A   \n"
        },
        {
            "label": "2025-01-24_23-10-37",
            "content": "@@ -3461,29 +3461,27 @@\n if (\n-this-%3Ecabo != nullptr\n+cabo-%3Eget_charger()\n )%0A  \n"
        },
        {
            "label": "2025-01-24_23-13-31",
            "content": "@@ -1495,92 +1495,74 @@\n     \n-std::string str() const%7B%0A        return fn::format(%22, Carregador %7B%7DW%22,this-%3Echarger)\n+void str()%7B%0A        std::cout %3C%3C %22, Carregador %22 %3C%3C charger %3C%3C %22W%22\n ;%0A  \n@@ -4108,18 +4108,16 @@\n tebook: \n-%7B%7D\n %7B%7D%22, sta\n@@ -4123,26 +4123,8 @@\n atus\n-,this-%3Ecabo-%3Estr()\n );%0A \n"
        },
        {
            "label": "2025-01-24_23-16-01",
            "content": "@@ -4005,41 +4005,8 @@\n o%22);\n-%0A        std::string cliente(%22%22);\n %0A%0A  \n@@ -4083,114 +4083,8 @@\n   %7D%0A\n-        if (cabo != nullptr)%0A        %7B%0A            %0A            cliente = cabo-%3Estr();%0A        %7D%0A        %0A\n     \n@@ -4144,15 +4144,25 @@\n tus,\n-cliente\n+this-%3Ecabo-%3Estr()\n );%0A \n"
        },
        {
            "label": "2025-01-24_23-17-29",
            "content": "@@ -4032,24 +4032,100 @@\n iente(%22%22);%0A%0A\n+        if (esta_ligado)%0A        %7B%0A            status = %22ligado%22;%0A        %7D%0A\n         if (\n@@ -4230,135 +4230,8 @@\n     \n-%0A        if (esta_ligado)%0A        %7B%0A            return fn::format(%22Notebook: ligado por %7B%7D min, %7B%7D%22, status,cliente);%0A        %7D\n %0A%0A  \n"
        },
        {
            "label": "2025-01-24_23-20-24",
            "content": "@@ -4251,21 +4251,22 @@\n n, %7B%7D%22, \n-tempo\n+status\n ,cliente\n"
        },
        {
            "label": "2025-01-24_23-21-15",
            "content": "@@ -4244,16 +4244,18 @@\n r %7B%7D min\n+, \n %7B%7D%22, tem\n"
        },
        {
            "label": "2025-01-24_23-26-27",
            "content": "@@ -3650,35 +3650,12 @@\n     \n-std::shared_ptr%3CCarregador%3E\n+void\n  rm_\n@@ -3674,39 +3674,36 @@\n         if (\n+!\n cabo\n- == nullptr\n+-%3Echk()\n )%0A        %7B%0A\n@@ -3928,97 +3928,8 @@\n lse;\n-%0A%0A        auto old_cabo = cabo;%0A        cabo = nullptr;%0A        return old_cabo;%0A        \n %0A   \n@@ -4905,27 +4905,8 @@\n     \n- auto old_charger =\n  not\n"
        },
        {
            "label": "2025-01-24_23-31-49",
            "content": "@@ -3797,24 +3797,16 @@\n   return\n- nullptr\n ;%0A      \n"
        },
        {
            "label": "2025-01-24_23-32-03",
            "content": "@@ -4161,45 +4161,8 @@\n %22%22);\n-%0A        std::string bateria_str(%22%22);\n %0A%0A  \n@@ -4269,107 +4269,8 @@\n    %0A\n-        if (Pilha != nullptr)%0A        %7B%0A            bateria_str = Pilha-%3Estr();%0A        %7D%0A        %0A\n     \n@@ -4369,18 +4369,16 @@\n %7B%7D min%7B%7D\n-%7B%7D\n %22, tempo\n@@ -4389,20 +4389,8 @@\n ente\n-,bateria_str\n );%0A \n"
        },
        {
            "label": "2025-01-24_23-36-22",
            "content": "@@ -896,81 +896,63 @@\n     \n-std::string str() const%7B%0A        return fn::format(%22, %7B%7D/%7B%7D%22,carga_atual,\n+void str()%7B%0A        std::cout %3C%3C carga_atual %3C%3C %22/%22 %3C%3C \n carg\n@@ -956,17 +956,16 @@\n arga_max\n-)\n ;%0A    %7D%0A\n"
        },
        {
            "label": "2025-01-24_23-37-13",
            "content": "@@ -4164,30 +4164,23 @@\n :string \n-Carregador_str\n+cliente\n (%22%22);%0A  \n@@ -4279,30 +4279,23 @@\n         \n-Carregador_str\n+cliente\n  = cabo-\n@@ -4535,30 +4535,23 @@\n , tempo,\n-Carregador_str\n+cliente\n ,bateria\n@@ -4609,18 +4609,16 @@\n ok: %7B%7D%7B%7D\n-%7B%7D\n %22, statu\n@@ -4623,34 +4623,15 @@\n tus,\n-Carregador_str,bateria_str\n+cliente\n );%0A \n"
        },
        {
            "label": "2025-01-24_23-38-03",
            "content": "@@ -945,24 +945,16 @@\n ormat(%22,\n- Bateria\n  %7B%7D/%7B%7D%22,\n"
        },
        {
            "label": "2025-01-24_23-38-31",
            "content": "@@ -1974,30 +1974,16 @@\n     if (\n-%0A            (\n cabo == \n@@ -1994,52 +1994,8 @@\n ptr)\n- &&%0A            (Pilha == nullptr)%0A        )\n %0A   \n@@ -2082,32 +2082,32 @@\n turn;%0A        %7D%0A\n-\n         %0A       \n@@ -2100,32 +2100,249 @@\n       %0A        %0A\n+        if (%0A            (cabo-%3Eget_charger() == 0) &&%0A            (!tem_bateria)%0A            %0A            )%0A        %7B%0A            std::cout %3C%3C %22fail: n%C3%A3o foi poss%C3%ADvel ligar%5Cn%22;%0A            return;%0A        %7D%0A        %0A\n         %0A       \n"
        },
        {
            "label": "2025-01-24_23-39-58",
            "content": "@@ -5479,17 +5479,8 @@\n city\n-,capacity\n );%0A \n"
        },
        {
            "label": "2025-01-24_23-50-13",
            "content": "@@ -2384,39 +2384,35 @@\n         if (\n-cabo != nullptr\n+tem_bateria\n )%0A        %7B%0A\n"
        },
        {
            "label": "2025-01-24_23-52-35",
            "content": "@@ -2235,184 +2235,8 @@\n  x)%7B\n-%0A%0A        if (%0A            (cabo == nullptr) &&%0A            (Pilha == nullptr)%0A        )%0A        %7B%0A            std::cout %3C%3C %22fail: sem bateria%5Cn%22;%0A            return;%0A        %7D\n %0A   \n@@ -2233,33 +2233,32 @@\n nt x)%7B%0A        %0A\n-%0A\n         if (!est\n@@ -2372,24 +2372,400 @@\n mpo += x;%0A%0A%0A\n+        if (cabo != nullptr)%0A        %7B%0A%0A            if (cabo-%3Eget_charger())%0A            %7B%0A                Pilha-%3Erecarregar(x*cabo-%3Eget_charger());            %0A            %7Delse%0A            %7B%0A                Pilha-%3Egastar(x);%0A            %7D%0A            %0A            if (Pilha-%3Ecarga_chk() == false)%0A            %7B%0A                esta_ligado = false;%0A            %7D%0A        %7D %0A%0A\n        //Pil\n"
        },
        {
            "label": "2025-01-24_23-55-01",
            "content": "@@ -2235,130 +2235,8 @@\n  x)%7B\n-%0A        %0A%0A        if (!esta_ligado)%0A        %7B%0A            std::cout %3C%3C %22fail: desligado%5Cn%22;%0A            return;%0A        %7D\n %0A%0A  \n@@ -2370,15 +2370,137 @@\n sem \n-energia\n+bateria%5Cn%22;%0A            return;%0A        %7D%0A        %0A%0A        if (!esta_ligado)%0A        %7B%0A            std::cout %3C%3C %22fail: desligado\n %5Cn%22;\n"
        },
        {
            "label": "2025-01-24_23-55-34",
            "content": "@@ -2556,24 +2556,26 @@\n x;%0A%0A%0A       \n+//\n Pilha-%3Egasta\n"
        },
        {
            "label": "2025-01-24_23-56-20",
            "content": "@@ -2556,182 +2556,33 @@\n x;%0A%0A\n-        if (Pilha != nullptr)%0A        %7B%0A            Pilha-%3Egastar(x);%0A        %7D%0A        %0A        if (cabo != nullptr)%0A        %7B%0A            return;%0A        %7D%0A        %0A       \n+%0A       Pilha-%3Egastar(x);\n %0A   \n"
        },
        {
            "label": "2025-01-24_23-58-59",
            "content": "@@ -2860,32 +2860,12 @@\n     \n-std::shared_ptr%3CBateria%3E\n+void\n  rm_\n@@ -2896,32 +2896,28 @@\n     if (\n-Pilha == nullptr\n+!tem_bateria\n )%0A      \n@@ -3011,55 +3011,8 @@\n    %0A\n-        std::string Pilha_str = Pilha-%3Estr();%0A%0A\n     \n@@ -3033,48 +3033,41 @@\n %3C%3C %22\n-r\n+R\n emovido\n-%22 %3C%3C\n+ %22;%0A       \n  Pilha\n-_str %3C%3C %22%5Cn%22;%0A        \n+-%3Estr();\n %0A   \n@@ -5556,27 +5556,8 @@\n     \n- auto old_bateria =\n  not\n"
        },
        {
            "label": "2025-01-25_00-02-50",
            "content": "@@ -3206,39 +3206,44 @@\n         if (\n+!\n cabo\n- == nullptr\n+-%3Eget_charger()\n )%0A        %7B%0A\n@@ -3300,92 +3300,8 @@\n   %0A%0A\n-        auto old_pilha = Pilha;%0A%0A        Pilha = nullptr;%0A        return old_pilha;%0A\n %0A   \n"
        },
        {
            "label": "2025-01-25_00-03-50",
            "content": "@@ -3006,32 +3006,24 @@\n       return\n- nullptr\n ;%0A        %7D%0A\n"
        },
        {
            "label": "2025-01-25_00-04-01",
            "content": "@@ -944,16 +944,26 @@\n format(%22\n+, Bateria \n %7B%7D/%7B%7D%22,c\n@@ -3104,33 +3104,32 @@\n d::cout %3C%3C %22\n-R\n+r\n emovido\n- \n %22 %3C%3C Pilha_s\n@@ -4183,26 +4183,16 @@\n ia_str(%22\n-, Bateria \n %22);%0A%0A   \n@@ -4365,17 +4365,16 @@\n ria_str \n-+\n = Pilha-\n@@ -4640,22 +4640,8 @@\n tr);\n- %0A%0A        //%0A\n %0A   \n"
        },
        {
            "label": "2025-01-25_00-05-59",
            "content": "@@ -4170,24 +4170,34 @@\n ateria_str(%22\n+, Bateria \n %22);%0A%0A       \n@@ -4346,48 +4346,8 @@\n   %7B%0A\n-            bateria_str = %22, Bateria %22;%0A\n     \n"
        },
        {
            "label": "2025-01-25_00-06-29",
            "content": "@@ -3131,24 +3131,55 @@\n %3C %22%5Cn%22;%0A    \n+    %0A        std::cout %3C%3C %22%5Cn%22;\n %0A        tem\n"
        },
        {
            "label": "2025-01-25_00-06-51",
            "content": "@@ -2612,16 +2612,25 @@\n tar(x);%0A\n+        %7D\n %0A       \n@@ -2634,136 +2634,8 @@\n     \n-    if (!Pilha-%3Ecarga_chk())%0A            %7B%0A                esta_ligado = false;%0A            %7D%0A            %0A        %7D%0A        %0A%0A%0A\n %0A   \n"
        },
        {
            "label": "2025-01-25_00-09-54",
            "content": "@@ -2586,59 +2586,8 @@\n   %7B%0A\n-%0A            if (cabo == nullptr)%0A            %7B%0A   \n     \n@@ -2609,28 +2609,24 @@\n gastar(x);%0A%0A\n-    \n             \n@@ -2658,34 +2658,26 @@\n             \n-    %7B%0A    \n+%7B%0A\n             \n@@ -2717,112 +2717,9 @@\n     \n-    %7D%0A            %7Delse%7B%0A                Pilha-%3Erecarregar(x);%0A            %7D%0A            %0A            %0A%0A\n+%7D\n %0A   \n"
        },
        {
            "label": "2025-01-25_00-12-31",
            "content": "@@ -2801,17 +2801,16 @@\n  %7Delse%7B%0A\n-%0A\n         \n@@ -2840,30 +2840,8 @@\n ar(x\n- * cabo-%3Eget_charger()\n );%0A \n"
        },
        {
            "label": "2025-01-25_00-15-14",
            "content": "@@ -27,15 +27,14 @@\n de %3C\n-sstream\n+memory\n %3E%0A#i\n@@ -33,37 +33,38 @@\n mory%3E%0A#include %3C\n-memor\n+utilit\n y%3E%0A#include %3Cuti\n@@ -63,44 +63,35 @@\n ude \n-%3Cutility%3E%0A%0A%0Aclass Carregador %7B%0A%0A    \n+%22fn.hpp%22%0A%0A%0Aclass Bateria%0A%7B%0A\n priv\n@@ -95,25 +95,24 @@\n rivate:%0A\n-%0A\n     int \n potencia\n@@ -107,31 +107,59 @@\n int \n-potencia;%0A%0A    \n+carga_max,carga_atual;%0A    bool tem_carga;%0A\n public:%0A\n %0A   \n@@ -158,85 +158,195 @@\n ic:%0A\n+    \n %0A    \n-Carregador(int pot) : potencia(pot) %7B%7D%0A%0A    int getPotencia() \n+Bateria(int max = 50, int atual = 50)%7B%0A        this-%3Ecarga_max = max;%0A        this-%3Ecarga_atual = atual;%0A        tem_carga = true;%0A    %7D%0A%0A    void set_Bateria(int max)\n %7B%0A\n+%0A\n         \n retu\n@@ -345,30 +345,102 @@\n     \n-return potencia\n+this-%3Ecarga_max = max;%0A        this-%3Ecarga_atual = max;%0A        this-%3Etem_carga = true\n ;%0A    %7D\n+ \n %0A%0A  \n@@ -450,81 +450,543 @@\n oid \n-mostrar() %7B%0A        std::cout %3C%3C %22Carregador %22 %3C%3C potencia %3C%3C %22W%22\n+gastar(int x)%7B%0A        carga_atual -= x;%0A        if (carga_atual %3C= 0)%0A        %7B%0A            carga_atual = 0;%0A            std::cout %3C%3C %22fail: descarregou%5Cn%22;%0A            tem_carga = false;%0A        %7D%0A        %0A    %7D%0A%0A    bool carga_chk()%7B%0A        return tem_carga;%0A    %7D%0A%0A    void recarregar(int x)%7B%0A        carga_atual += x;%0A        if (carga_atual %3E carga_max)%0A        %7B%0A            carga_atual = carga_max;%0A        %7D%0A                %0A    %7D%0A%0A    std::string str() const%7B%0A        return fn::format(%22%7B%7D/%7B%7D%22,carga_atual,carga_max)\n ;%0A    %7D%0A\n %7D;%0A%0A\n@@ -977,24 +977,25 @@\n max);%0A    %7D%0A\n+%0A\n %7D;%0A%0Aclass Ba\n@@ -996,23 +996,21 @@\n ass \n-Bateria %7B%0A%0A    \n+Carregador%0A%7B%0A\n priv\n@@ -1010,25 +1010,24 @@\n %0A%7B%0Aprivate:%0A\n-%0A\n     int carg\n@@ -1027,220 +1027,149 @@\n nt c\n+h\n arg\n-a\n+er\n ;%0A    \n-int capacidade;%0A%0A    public:%0A%0A    Bateria(int capMax) : carga(capMax), capacidade(capMax) %7B%7D%0A%0A    int getCarga() %7B%0A        return carga\n+bool esta_carregando;%0Apublic:%0A%0A    Carregador(int x = 0,bool y = false)%7B%0A        charger = x\n ;%0A    \n-%7D%0A%0A\n     \n-int getCapacidade() %7B%0A        return capacidade\n+esta_carregando = y\n ;%0A    %7D\n+;\n %0A%0A  \n@@ -1179,129 +1179,50 @@\n oid \n-carregar(int potencia, int tempo) %7B%0A        %0A        if(carga %3C capacidade) %7B%0A            carga += potencia * tempo;%0A    \n+set_charger(int x)%7B%0A        charger = x;%0A%0A\n     \n@@ -1231,64 +1231,62 @@\n   if\n+ \n (c\n+h\n arg\n-a %3E capacidade) %7B%0A                carga = capacidad\n+er)%0A        %7B%0A            esta_carregando = tru\n e;%0A \n@@ -1284,36 +1284,32 @@\n = true;%0A        \n-    \n %7D%0A        %7D%0A    \n@@ -1294,33 +1294,32 @@\n       %7D%0A        \n-%7D\n %0A    %7D%0A%0A    bool\n@@ -1318,444 +1318,286 @@\n     \n-bool usar(int tempo) %7B%0A        if(carga %3E tempo) %7B%0A            //std::cout %3C%3C %22Usando por %22 %3C%3C tempo %3C%3C %22 minutos%22 %3C%3C %22%5Cn%22;%0A            carga -= tempo\n+void rm_charger()%7B%0A        esta_carregando = false;%0A        charger = 0\n ;%0A    \n+%7D%0A%0A\n     \n-    return true;%0A        %7D%0A        else %7B%0A%0A            ///std::cout %3C%3C %22Usando por %22 %3C%3C\n+int get_charger()%7B%0A        return\n  c\n+h\n arg\n-a %3C%3C %22minuto, descarregou%22 %3C%3C %22%5Cn%22\n+er\n ;%0A    \n-  \n+%7D%0A%0A\n     \n-  carga = 0;%0A            return false;%0A        %7D%0A    %7D%0A%0A    void mostrar() %7B%0A        std::cout %3C%3C %22Bateria %22 %3C%3C carga %3C%3C %22/%22 %3C%3C capacidade\n+bool chk()%7B%0A        return esta_carregando;%0A%0A    %7D%0A%0A    std::string str() const%7B%0A        return fn::format(%22, Carregador %7B%7DW%22,this-%3Echarger)\n ;%0A  \n@@ -1620,24 +1620,19 @@\n Notebook\n- %7B%0A%0A    \n+%0A%7B%0A\n private:\n@@ -1641,66 +1641,70 @@\n     \n-bool ligado;%0A    int tempoUso;%0A%0A    Bateria* bateria;%0A    \n+std::shared_ptr%3CBateria%3E Pilha %7Bnullptr%7D;%0A    std::shared_ptr%3C\n Carr\n@@ -1713,35 +1713,83 @@\n ador\n-* carregador;%0A%0A    \n+%3E cabo %7Bnullptr%7D;%0A    bool esta_ligado,tem_bateria;%0A    int tempo;%0A\n public:%0A\n %0A   \n@@ -1780,24 +1780,28 @@\n po;%0Apublic:%0A\n+    \n %0A    Noteboo\n@@ -1807,160 +1807,94 @@\n ok()\n- : \n+%7B%0A        esta_\n ligado\n-(\n+ = \n false\n-),tempoUso(0), bateria(nullptr), carregador(nullptr) %7B%7D%0A%0A    void setBateria(Bateria* novaBateria) %7B%0A        bateria = novaBateria\n+;%0A        tem_bateria = false;%0A        tempo = 0\n ;%0A    %7D\n+;%0A\n %0A%0A  \n@@ -1904,85 +1904,154 @@\n oid \n-setCarregador(Carregador* novoCarregador) %7B%0A        if(carregador != nullptr)\n+turn_off()%7B esta_ligado = 0;%7D%0A%0A    void turn_on()%7B%0A%0A        if (%0A            (cabo == nullptr) &&%0A            (Pilha == nullptr)%0A        )%0A       \n  %7B%0A \n@@ -2085,37 +2085,30 @@\n il: \n-carregador j%C3%A1 conectado%22 %3C%3C %22\n+n%C3%A3o foi poss%C3%ADvel ligar\n %5Cn%22;\n@@ -2150,69 +2150,82 @@\n     \n-carre\n+%0A        %0A        %0A        esta_li\n gado\n-r\n  = \n-novoCarregador;%0A\n+1;%0A  \n     \n+  \n %7D%0A%0A    \n-Bateria* rmBateria() \n+void use(int x)\n %7B%0A  \n@@ -2223,32 +2223,33 @@\n nt x)%7B%0A        %0A\n+%0A\n         if(bater\n@@ -2246,28 +2246,31 @@\n   if\n-(bateria == nullptr)\n+ (!esta_ligado)%0A       \n  %7B%0A \n@@ -2304,25 +2304,17 @@\n il: \n-Sem bateria%22 %3C%3C %22\n+desligado\n %5Cn%22;\n@@ -2328,32 +2328,24 @@\n       return\n- nullptr\n ;%0A        %7D%0A\n@@ -2357,49 +2357,32 @@\n     \n-Bateria* temp = bateria;%0A        bateria \n+if (%0A            (cabo =\n = nu\n@@ -2378,33 +2378,36 @@\n (cabo == nullptr\n-;\n+) &&\n %0A        std::co\n@@ -2403,292 +2403,180 @@\n     \n-std::cout %3C%3C %22Removido %22;%0A        std::cout %3C%3C temp -%3E getCarga() %3C%3C %22/%22 %3C%3C temp -%3E getCapacidade();%0A        std::cout %3C%3C %22%5Cn%22;%0A        desligar();%0A        return nullptr;%0A    %7D%0A%0A    Carregador* rmCarregador() %7B //adi%C3%A7%C3%A3o de m%C3%A9todo que n%C3%A3o estava pedindo na vers%C3%A3o sem testes definidos\n+    (Pilha == nullptr)%0A        )%0A        %7B%0A            std::cout %3C%3C %22fail: sem energia%5Cn%22;%0A            return;%0A        %7D%0A%0A        tempo += x;%0A%0A        if (Pilha != nullptr)\n %0A   \n@@ -2580,25 +2580,29 @@\n         \n-%0A\n+%7B%0A%0A  \n         \n if(carre\n@@ -2593,29 +2593,26 @@\n         \n+  \n if\n+ \n (ca\n-rregador\n+bo\n  == null\n@@ -2607,34 +2607,32 @@\n cabo == nullptr)\n- %7B\n %0A            std\n@@ -2632,80 +2632,43 @@\n     \n-std::cout %3C%3C %22fail: Sem carregador%22 %3C%3C %22%5Cn%22;%0A            return nullptr;\n+%7B%0A               Pilha-%3Egastar(x);%0A\n %0A   \n@@ -2672,27 +2672,24 @@\n         \n-%7D%0A%0A\n         \n Carregad\n@@ -2684,207 +2684,109 @@\n     \n-Carregador* temp = carregador;%0A        carregador = nullptr;%0A%0A        std::cout %3C%3C %22Removido %22 %3C%3C temp -%3E getPotencia() %3C%3C %22W%22 %3C%3C %22%5Cn%22;%0A%0A        if(bateria == nullptr %7C%7C bateria -%3E getCarga() == 0) %7B\n+if (!Pilha-%3Ecarga_chk())%0A                %7B%0A                    esta_ligado = false;%0A                %7D\n %0A   \n@@ -2790,35 +2790,31 @@\n             \n-desligar();\n+%7Delse%7B%0A\n %0A        %7D%0A \n@@ -2810,26 +2810,24 @@\n         \n-%7D%0A\n         \n // temp \n@@ -2822,173 +2822,106 @@\n     \n-// temp -%3E mostrar();%0A        // std::cout %3C%3C %22%5Cn%22;%0A        return temp;%0A\n+Pilha-%3Erecarregar(x * cabo-%3Eget_charger());%0A            %7D%0A        \n     \n-%7D%0A\n %0A    \n-void ligar() %7B%0A        if((bateria && bateria -%3E getCarga() %3E 0) %7C%7C carregador) %7B\n+        %0A%0A%0A            \n %0A   \n@@ -2929,80 +2929,50 @@\n     \n+%7D%0A\n     \n-ligado = true;%0A            //std::cout %3C%3C %22notebook ligado%22 %3C%3C %22%5Cn%22;\n+    %0A%0A%0A%0A        if (cabo != nullptr)\n %0A   \n@@ -2968,33 +2968,33 @@\n ullptr)%0A        \n-%7D\n+%7B\n %0A        else %7B%0A\n@@ -2990,87 +2990,46 @@\n     \n-else %7B%0A            std::cout %3C%3C %22fail: n%C3%A3o foi poss%C3%ADvel ligar%22 %3C%3C %22%5Cn%22;\n+    return;%0A        %7D%0A        \n %0A       \n  %7D%0A \n@@ -3020,26 +3020,24 @@\n     %0A       \n- %7D\n %0A    %7D%0A%0A    \n@@ -3045,223 +3045,207 @@\n oid \n-desligar() %7B%0A        ligado = false;%0A        //std::cout %3C%3C %22notebook desligado%22 %3C%3C %22%5Cn%22\n+set_bateria(std::shared_ptr%3CBateria%3E pilha)%7B%0A        this-%3EPilha = pilha;%0A        tem_bateria = true\n ;%0A    \n- \n+%7D%0A%0A\n     \n-// desligar e sua simplicidade sempre %C3%A9 f%C3%A1cil%0A    %7D%0A%0A    void usar(int tempo) %7B%0A        %0A        if(ligado == false)\n+std::shared_ptr%3CBateria%3E rm_bateria()%7B%0A        %0A        if (Pilha == nullptr)%0A        \n %7B%0A  \n@@ -3278,23 +3278,19 @@\n il: \n-desligado%22 %3C%3C %22\n+Sem bateria\n %5Cn%22;\n@@ -3300,32 +3300,40 @@\n           return\n+ nullptr\n ;%0A        %7D%0A%0A   \n@@ -3320,33 +3320,32 @@\n lptr;%0A        %7D%0A\n-%0A\n         %0A       \n@@ -3349,2815 +3349,4094 @@\n     \n-//bool bateriaCarregada = false;%0A        if(bateria != nullptr) %7B%0A            //bateriaCarregada = bateria -%3E usar(tempo);%0A            //bool conseguirUsar = bateria -%3E usar(tempo);%0A%0A            if(bateria -%3E usar(tempo) == false) %7B%0A                std::cout %3C%3C %22fail: descarregou%22 %3C%3C %22%5Cn%22;%0A                desligar();%0A                return;%0A            %7D%0A        %7D%0A        else if(carregador == nullptr) %7B%0A            desligar();%0A            return;%0A        %7D%0A        %0A        tempoUso += tempo;%0A        if(carregador != nullptr && bateria != nullptr) %7B%0A                bateria -%3E carregar(carregador -%3E getPotencia(), tempo);%0A                //tempoUso += tempo;%0A        %7D%0A            %0A    %7D%0A%0A    void mostrar() %7B%0A        %0A        std::cout %3C%3C %22Notebook: %22;%0A        if (ligado != false) %7B%0A            std::cout %3C%3C %22ligado por %22 %3C%3C tempoUso %3C%3C %22 min%22;%0A        %7D %0A        else %7B%0A            std::cout %3C%3C %22desligado%22;%0A        %7D%0A%0A        if(carregador != nullptr) %7B%0A            std::cout %3C%3C %22, %22;%0A            carregador -%3E mostrar();%0A        %7D%0A%0A        if(bateria != nullptr) %7B%0A            std::cout %3C%3C %22, %22;%0A            bateria -%3E mostrar();%0A        %7D%0A%0A        std::cout %3C%3C %22%5Cn%22;%0A    %7D%0A%7D;%0A%0A%0Aint main() %7B%0A%0A    Notebook AcerNitro;    %0A%0A    while (true) %7B%0A%0A        std::string line, cmd;%0A        getline(std::cin, line);%0A        std::cout %3C%3C %22$%22 %3C%3C line %3C%3C %22%5Cn%22;%0A%0A        std::stringstream ss(line);%0A        ss %3E%3E cmd;%0A%0A        if (cmd == %22end%22) %7B%0A            break;%0A        %7D %0A%0A        else if (cmd == %22show%22) %7B %0A            AcerNitro.mostrar();%0A        %7D %0A%0A        else if (cmd == %22turn_on%22) %7B %0A            AcerNitro.ligar();%0A        %7D%0A%0A        else if (cmd == %22turn_off%22) %7B %0A            AcerNitro.desligar();%0A        %7D %0A%0A        else if (cmd == %22use%22) %7B %0A            int minutes;%0A            ss %3E%3E minutes;%0A            AcerNitro.usar(minutes);%0A        %7D %0A%0A        else if (cmd == %22set_charger%22) %7B%0A%0A            // CRIE UM OBJETO Charger E ATRIBUA AO NOTEBOOK%0A            int power;%0A            ss %3E%3E power;%0A            Carregador* novoCarregador = new Carregador(power);%0A            AcerNitro.setCarregador(novoCarregador);%0A        %7D %0A%0A        else if (cmd == %22rm_charger%22) %7B%0A%0A            // REMOVA O CARREGADOR DO NOTEBOOK E IMPRIMA SE ELE EXISTIR%0A            AcerNitro.rmCarregador();%0A        %7D %0A%0A        else if (cmd == %22set_battery%22) %7B%0A%0A            // CRIE UM OBJETO Bateria E ATRIBUA AO NOTEBOOK%0A            int capacity;%0A            ss %3E%3E capacity;%0A            Bateria* novaBateria = new Bateria(capacity);%0A            AcerNitro.setBateria(novaBateria);%0A        %7D %0A        else if (cmd == %22rm_battery%22) %7B%0A%0A            // REMOVA A BATERIA DO NOTEBOOK E IMPRIMA SE ELA EXISTIR%0A            AcerNitro.rmBateria();%0A        %7D %0A        else %7B%0A            std::cout %3C%3C %22fail: comando inv%C3%A1lido%22 %3C%3C %22%5Cn%22;%0A       \n+std::string Pilha_str = Pilha-%3Estr();%0A%0A        std::cout %3C%3C %22Removido %22 %3C%3C Pilha_str %3C%3C %22%5Cn%22;%0A    %0A        tem_bateria = false;%0A%0A        if (cabo == nullptr)%0A        %7B%0A%0A            esta_ligado = false;%0A        %7D%0A        %0A%0A        auto old_pilha = Pilha;%0A%0A        Pilha = nullptr;%0A        return old_pilha;%0A%0A    %7D%0A%0A    void set_charger(std::shared_ptr%3CCarregador%3E cabo)%7B%0A%0A        if (this-%3Ecabo != nullptr)%0A        %7B%0A            std::cout %3C%3C %22fail: carregador j%C3%A1 conectado%5Cn%22;%0A            return;%0A        %7D%0A        %0A%0A        this-%3Ecabo = cabo;%0A    %7D%0A%0A    std::shared_ptr%3CCarregador%3E rm_charger()%7B%0A%0A        if (cabo == nullptr)%0A        %7B%0A            std::cout %3C%3C %22fail: Sem carregador%5Cn%22;%0A            return nullptr;%0A        %7D%0A        %0A        std::cout %3C%3C %22Removido %22 %3C%3C cabo-%3Eget_charger() %3C%3C %22W%5Cn%22;%0A        %0A%0A        cabo-%3Erm_charger();%0A        esta_ligado = false;%0A%0A        auto old_cabo = cabo;%0A        cabo = nullptr;%0A        return old_cabo;%0A        %0A    %7D%0A%0A    std::string str() const%7B%0A        std::string status(%22desligado%22);%0A        std::string Carregador_str(%22%22);%0A        std::string bateria_str(%22%22);%0A%0A        if (cabo != nullptr)%0A        %7B%0A            %0A            Carregador_str = cabo-%3Estr();%0A        %7D%0A        %0A        if (Pilha != nullptr)%0A        %7B%0A            bateria_str = %22, Bateria %22;%0A            bateria_str += Pilha-%3Estr();%0A        %7D%0A        %0A        %0A        if (esta_ligado)%0A        %7B%0A            return fn::format(%22Notebook: ligado por %7B%7D min%7B%7D%7B%7D%22, tempo,Carregador_str,bateria_str);%0A        %7D%0A%0A        return fn::format(%22Notebook: %7B%7D%7B%7D%7B%7D%22, status,Carregador_str,bateria_str); %0A%0A        //%0A%0A    %7D%0A%0A%7D;%0A%0Astd::ostream& operator%3C%3C(std::ostream& os, const Notebook& note)%7B%0A    return os %3C%3C note.str();%0A%7D%0A%0Aclass Adapter %7B%0A    Notebook notebook;%0Apublic:%0A    void show() %7B%0A        fn::write(notebook);%0A        // std::cout %3C%3C notebook.str() %3C%3C '%5Cn';%0A    %7D%0A%0A    void turn_on() %7B%0A        notebook.turn_on();%0A    %7D%0A%0A    void turn_off() %7B%0A        notebook.turn_off();%0A    %7D%0A%0A    void set_charger(int power) %7B%0A        auto carregador_externo = std::make_shared%3CCarregador%3E(power);%0A        notebook.set_charger(carregador_externo);%0A    %7D%0A    void rm_charger() %7B%0A        auto old_charger = notebook.rm_charger();%0A%0A        // auto charger = notebook.rmCharger();%0A        // if (charger != nullptr) %7B%0A        //     std::cout %3C%3C %22Removido %22 %3C%3C charger-%3Estr() %3C%3C '%5Cn';%0A        // %7D else %7B%0A        //     std::cout %3C%3C %22fail: Sem carregador%5Cn%22;%0A        // %7D%0A    %7D%0A    void set_battery(int capacity) %7B%0A        auto bateria_externa = std::make_shared%3CBateria%3E(capacity,capacity);%0A        notebook.set_bateria(bateria_externa);%0A        //TODO: Implementar%0A    %7D%0A%0A    void rm_battery() %7B%0A        auto old_bateria = notebook.rm_bateria();%0A%0A        // auto battery = notebook.rmBattery();%0A        // if (battery != nullptr) %7B%0A        //     std::cout %3C%3C %22Removido %22 %3C%3C battery-%3Estr() %3C%3C '%5Cn';%0A        // %7D else %7B%0A        //     std::cout %3C%3C %22fail: Sem bateria%5Cn%22;%0A        // %7D%0A    %7D%0A%0A    void use(int minutes) %7B%0A%0A        notebook.use(minutes);%0A    %7D%0A%7D;%0A%0Aint main() %7B%0A%0A    Adapter adp;%0A    while (true) %7B%0A        auto line = fn::input();%0A        auto args = fn::split(line, ' ');%0A        fn::write(%22$%22 + line);%0A%0A        if      (args%5B0%5D == %22end%22)         %7B break;                                   %7D%0A        else if (args%5B0%5D == %22show%22)        %7B adp.show();                              %7D%0A        else if (args%5B0%5D == %22turn_on%22)     %7B adp.turn_on();                           %7D%0A        else if (args%5B0%5D == %22turn_off%22)    %7B adp.turn_off();                          %7D%0A        else if (args%5B0%5D == %22use%22)         %7B adp.use(+args%5B1%5D);                       %7D%0A        else if (args%5B0%5D == %22set_charger%22) %7B adp.set_charger(+args%5B1%5D);               %7D%0A        else if (args%5B0%5D == %22rm_charger%22)  %7B adp.rm_charger();                        %7D%0A        else if (args%5B0%5D == %22set_battery%22) %7B adp.set_battery(+args%5B1%5D);               %7D%0A        else if (args%5B0%5D == %22rm_battery%22)  %7B adp.rm_battery();                        %7D%0A        else                               %7B std::cout %3C%3C %22fail: comando inv%C3%A1lido%5Cn%22;\n  %7D%0A \n"
        },
        {
            "label": "2025-03-12_15-42-16",
            "content": "@@ -3434,33 +3434,8 @@\n a !=\n- nullptr && carregador ==\n  nul\n@@ -3830,32 +3830,40 @@\n turn;%0A        %7D%0A\n+        \n %0A        tempoUs\n@@ -4048,33 +4048,24 @@\n ;%0A        %7D%0A\n-        %0A\n             \n"
        },
        {
            "label": "2025-03-12_15-45-56",
            "content": "@@ -1,3449 +1,4 @@\n-#include %3Ciostream%3E%0A#include %3Csstream%3E%0A#include %3Cmemory%3E%0A#include %3Cutility%3E%0A%0A%0Aclass Carregador %7B%0A%0A    private:%0A%0A    int potencia;%0A%0A    public:%0A%0A    Carregador(int pot) : potencia(pot) %7B%7D%0A%0A    int getPotencia() %7B%0A        return potencia;%0A    %7D%0A%0A    void mostrar() %7B%0A        std::cout %3C%3C %22Carregador %22 %3C%3C potencia %3C%3C %22W%22;%0A    %7D%0A%7D;%0A%0Aclass Bateria %7B%0A%0A    private:%0A%0A    int carga;%0A    int capacidade;%0A%0A    public:%0A%0A    Bateria(int capMax) : carga(capMax), capacidade(capMax) %7B%7D%0A%0A    int getCarga() %7B%0A        return carga;%0A    %7D%0A%0A    int getCapacidade() %7B%0A        return capacidade;%0A    %7D%0A%0A    void carregar(int potencia, int tempo) %7B%0A        %0A        if(carga %3C capacidade) %7B%0A            carga += potencia * tempo;%0A            if(carga %3E capacidade) %7B%0A                carga = capacidade;%0A            %7D%0A        %7D%0A    %7D%0A%0A    bool usar(int tempo) %7B%0A        if(carga %3E tempo) %7B%0A            //std::cout %3C%3C %22Usando por %22 %3C%3C tempo %3C%3C %22 minutos%22 %3C%3C %22%5Cn%22;%0A            carga -= tempo;%0A            return true;%0A        %7D%0A        else %7B%0A%0A            ///std::cout %3C%3C %22Usando por %22 %3C%3C carga %3C%3C %22minuto, descarregou%22 %3C%3C %22%5Cn%22;%0A            carga = 0;%0A            return false;%0A        %7D%0A    %7D%0A%0A    void mostrar() %7B%0A        std::cout %3C%3C %22Bateria %22 %3C%3C carga %3C%3C %22/%22 %3C%3C capacidade;%0A    %7D%0A%7D;%0A%0A%0A%0Aclass Notebook %7B%0A%0A    private:%0A%0A    bool ligado;%0A    int tempoUso;%0A%0A    Bateria* bateria;%0A    Carregador* carregador;%0A%0A    public:%0A%0A    Notebook() : ligado(false),tempoUso(0), bateria(nullptr), carregador(nullptr) %7B%7D%0A%0A    void setBateria(Bateria* novaBateria) %7B%0A        bateria = novaBateria;%0A    %7D%0A%0A    void setCarregador(Carregador* novoCarregador) %7B%0A        if(carregador != nullptr) %7B%0A            std::cout %3C%3C %22fail: carregador j%C3%A1 conectado%22 %3C%3C %22%5Cn%22;%0A            return;%0A        %7D%0A        carregador = novoCarregador;%0A    %7D%0A%0A    Bateria* rmBateria() %7B%0A        %0A        if(bateria == nullptr) %7B%0A            std::cout %3C%3C %22fail: Sem bateria%22 %3C%3C %22%5Cn%22;%0A            return nullptr;%0A        %7D%0A%0A        Bateria* temp = bateria;%0A        bateria = nullptr;%0A        std::cout %3C%3C %22Removido %22;%0A        std::cout %3C%3C temp -%3E getCarga() %3C%3C %22/%22 %3C%3C temp -%3E getCapacidade();%0A        std::cout %3C%3C %22%5Cn%22;%0A        desligar();%0A        return nullptr;%0A    %7D%0A%0A    Carregador* rmCarregador() %7B //adi%C3%A7%C3%A3o de m%C3%A9todo que n%C3%A3o estava pedindo na vers%C3%A3o sem testes definidos%0A        %0A        if(carregador == nullptr) %7B%0A            std::cout %3C%3C %22fail: Sem carregador%22 %3C%3C %22%5Cn%22;%0A            return nullptr;%0A        %7D%0A%0A        Carregador* temp = carregador;%0A        carregador = nullptr;%0A%0A        std::cout %3C%3C %22Removido %22 %3C%3C temp -%3E getPotencia() %3C%3C %22W%22 %3C%3C %22%5Cn%22;%0A%0A        if(bateria == nullptr %7C%7C bateria -%3E getCarga() == 0) %7B%0A            desligar();%0A        %7D%0A        // temp -%3E mostrar();%0A        // std::cout %3C%3C %22%5Cn%22;%0A        return temp;%0A    %7D%0A%0A    void ligar() %7B%0A        if((bateria && bateria -%3E getCarga() %3E 0) %7C%7C carregador) %7B%0A            ligado = true;%0A            //std::cout %3C%3C %22notebook ligado%22 %3C%3C %22%5Cn%22;%0A        %7D%0A        else %7B%0A            std::cout %3C%3C %22fail: n%C3%A3o foi poss%C3%ADvel ligar%22 %3C%3C %22%5Cn%22;%0A        %7D%0A    %7D%0A%0A    void desligar() %7B%0A        ligado = false;%0A        //std::cout %3C%3C %22notebook desligado%22 %3C%3C %22%5Cn%22;%0A         // desligar e sua simplicidade sempre %C3%A9 f%C3%A1cil%0A    %7D%0A%0A    void usar(int tempo) %7B%0A        %0A        if(ligado == false)%7B%0A            std::cout %3C%3C %22fail: desligado%22 %3C%3C %22%5Cn%22;%0A            return;%0A        %7D%0A%0A        %0A        //bool bateriaCarregada = false;%0A        if(bateria != nullptr\n #inc\n@@ -3867,2776 +3867,8 @@\n   %7D%0A\n-        %0A        tempoUso += tempo;%0A        if(carregador != nullptr && bateria != nullptr) %7B%0A                bateria -%3E carregar(carregador -%3E getPotencia(), tempo);%0A                //tempoUso += tempo;%0A        %7D%0A            %0A    %7D%0A%0A    void mostrar() %7B%0A        %0A        std::cout %3C%3C %22Notebook: %22;%0A        if (ligado != false) %7B%0A            std::cout %3C%3C %22ligado por %22 %3C%3C tempoUso %3C%3C %22 min%22;%0A        %7D %0A        else %7B%0A            std::cout %3C%3C %22desligado%22;%0A        %7D%0A%0A        if(carregador != nullptr) %7B%0A            std::cout %3C%3C %22, %22;%0A            carregador -%3E mostrar();%0A        %7D%0A%0A        if(bateria != nullptr) %7B%0A            std::cout %3C%3C %22, %22;%0A            bateria -%3E mostrar();%0A        %7D%0A%0A        std::cout %3C%3C %22%5Cn%22;%0A    %7D%0A%7D;%0A%0A%0Aint main() %7B%0A%0A    Notebook AcerNitro;    %0A%0A    while (true) %7B%0A%0A        std::string line, cmd;%0A        getline(std::cin, line);%0A        std::cout %3C%3C %22$%22 %3C%3C line %3C%3C %22%5Cn%22;%0A%0A        std::stringstream ss(line);%0A        ss %3E%3E cmd;%0A%0A        if (cmd == %22end%22) %7B%0A            break;%0A        %7D %0A%0A        else if (cmd == %22show%22) %7B %0A            AcerNitro.mostrar();%0A        %7D %0A%0A        else if (cmd == %22turn_on%22) %7B %0A            AcerNitro.ligar();%0A        %7D%0A%0A        else if (cmd == %22turn_off%22) %7B %0A            AcerNitro.desligar();%0A        %7D %0A%0A        else if (cmd == %22use%22) %7B %0A            int minutes;%0A            ss %3E%3E minutes;%0A            AcerNitro.usar(minutes);%0A        %7D %0A%0A        else if (cmd == %22set_charger%22) %7B%0A%0A            // CRIE UM OBJETO Charger E ATRIBUA AO NOTEBOOK%0A            int power;%0A            ss %3E%3E power;%0A            Carregador* novoCarregador = new Carregador(power);%0A            AcerNitro.setCarregador(novoCarregador);%0A        %7D %0A%0A        else if (cmd == %22rm_charger%22) %7B%0A%0A            // REMOVA O CARREGADOR DO NOTEBOOK E IMPRIMA SE ELE EXISTIR%0A            AcerNitro.rmCarregador();%0A        %7D %0A%0A        else if (cmd == %22set_battery%22) %7B%0A%0A            // CRIE UM OBJETO Bateria E ATRIBUA AO NOTEBOOK%0A            int capacity;%0A            ss %3E%3E capacity;%0A            Bateria* novaBateria = new Bateria(capacity);%0A            AcerNitro.setBateria(novaBateria);%0A        %7D %0A        else if (cmd == %22rm_battery%22) %7B%0A%0A            // REMOVA A BATERIA DO NOTEBOOK E IMPRIMA SE ELA EXISTIR%0A            AcerNitro.rmBateria();%0A        %7D %0A        else %7B%0A            std::cout %3C%3C %22fail: comando inv%C3%A1lido%22 %3C%3C %22%5Cn%22;%0A        %7D%0A    %7D    %0A%7D%0A) %7B%0A            //bateriaCarregada = bateria -%3E usar(tempo);%0A            //bool conseguirUsar = bateria -%3E usar(tempo);%0A%0A            if(bateria -%3E usar(tempo) == false) %7B%0A                std::cout %3C%3C %22fail: descarregou%22 %3C%3C %22%5Cn%22;%0A                desligar();%0A                return;%0A            %7D%0A        %7D%0A        else if(carregador == nullptr) %7B%0A            desligar();%0A            return;%0A        %7D%0A        \n %0A   \n"
        },
        {
            "label": "2025-03-12_15-47-47",
            "content": "@@ -1,16 +1,3461 @@\n+#include %3Ciostream%3E%0A#include %3Csstream%3E%0A#include %3Cmemory%3E%0A#include %3Cutility%3E%0A%0A%0Aclass Carregador %7B%0A%0A    private:%0A%0A    int potencia;%0A%0A    public:%0A%0A    Carregador(int pot) : potencia(pot) %7B%7D%0A%0A    int getPotencia() %7B%0A        return potencia;%0A    %7D%0A%0A    void mostrar() %7B%0A        std::cout %3C%3C %22Carregador %22 %3C%3C potencia %3C%3C %22W%22;%0A    %7D%0A%7D;%0A%0Aclass Bateria %7B%0A%0A    private:%0A%0A    int carga;%0A    int capacidade;%0A%0A    public:%0A%0A    Bateria(int capMax) : carga(capMax), capacidade(capMax) %7B%7D%0A%0A    int getCarga() %7B%0A        return carga;%0A    %7D%0A%0A    int getCapacidade() %7B%0A        return capacidade;%0A    %7D%0A%0A    void carregar(int potencia, int tempo) %7B%0A        %0A        if(carga %3C capacidade) %7B%0A            carga += potencia * tempo;%0A            if(carga %3E capacidade) %7B%0A                carga = capacidade;%0A            %7D%0A        %7D%0A    %7D%0A%0A    bool usar(int tempo) %7B%0A        if(carga %3E tempo) %7B%0A            //std::cout %3C%3C %22Usando por %22 %3C%3C tempo %3C%3C %22 minutos%22 %3C%3C %22%5Cn%22;%0A            carga -= tempo;%0A            return true;%0A        %7D%0A        else %7B%0A%0A            ///std::cout %3C%3C %22Usando por %22 %3C%3C carga %3C%3C %22minuto, descarregou%22 %3C%3C %22%5Cn%22;%0A            carga = 0;%0A            return false;%0A        %7D%0A    %7D%0A%0A    void mostrar() %7B%0A        std::cout %3C%3C %22Bateria %22 %3C%3C carga %3C%3C %22/%22 %3C%3C capacidade;%0A    %7D%0A%7D;%0A%0A%0A%0Aclass Notebook %7B%0A%0A    private:%0A%0A    bool ligado;%0A    int tempoUso;%0A%0A    Bateria* bateria;%0A    Carregador* carregador;%0A%0A    public:%0A%0A    Notebook() : ligado(false),tempoUso(0), bateria(nullptr), carregador(nullptr) %7B%7D%0A%0A    void setBateria(Bateria* novaBateria) %7B%0A        bateria = novaBateria;%0A    %7D%0A%0A    void setCarregador(Carregador* novoCarregador) %7B%0A        if(carregador != nullptr) %7B%0A            std::cout %3C%3C %22fail: carregador j%C3%A1 conectado%22 %3C%3C %22%5Cn%22;%0A            return;%0A        %7D%0A        carregador = novoCarregador;%0A    %7D%0A%0A    Bateria* rmBateria() %7B%0A        %0A        if(bateria == nullptr) %7B%0A            std::cout %3C%3C %22fail: Sem bateria%22 %3C%3C %22%5Cn%22;%0A            return nullptr;%0A        %7D%0A%0A        Bateria* temp = bateria;%0A        bateria = nullptr;%0A        std::cout %3C%3C %22Removido %22;%0A        std::cout %3C%3C temp -%3E getCarga() %3C%3C %22/%22 %3C%3C temp -%3E getCapacidade();%0A        std::cout %3C%3C %22%5Cn%22;%0A        desligar();%0A        return nullptr;%0A    %7D%0A%0A    Carregador* rmCarregador() %7B //adi%C3%A7%C3%A3o de m%C3%A9todo que n%C3%A3o estava pedindo na vers%C3%A3o sem testes definidos%0A        %0A        if(carregador == nullptr) %7B%0A            std::cout %3C%3C %22fail: Sem carregador%22 %3C%3C %22%5Cn%22;%0A            return nullptr;%0A        %7D%0A%0A        Carregador* temp = carregador;%0A        carregador = nullptr;%0A%0A        std::cout %3C%3C %22Removido %22 %3C%3C temp -%3E getPotencia() %3C%3C %22W%22 %3C%3C %22%5Cn%22;%0A%0A        if(bateria == nullptr %7C%7C bateria -%3E getCarga() == 0) %7B%0A            desligar();%0A        %7D%0A        // temp -%3E mostrar();%0A        // std::cout %3C%3C %22%5Cn%22;%0A        return temp;%0A    %7D%0A%0A    void ligar() %7B%0A        if((bateria && bateria -%3E getCarga() %3E 0) %7C%7C carregador) %7B%0A            ligado = true;%0A            //std::cout %3C%3C %22notebook ligado%22 %3C%3C %22%5Cn%22;%0A        %7D%0A        else %7B%0A            std::cout %3C%3C %22fail: n%C3%A3o foi poss%C3%ADvel ligar%22 %3C%3C %22%5Cn%22;%0A        %7D%0A    %7D%0A%0A    void desligar() %7B%0A        ligado = false;%0A        //std::cout %3C%3C %22notebook desligado%22 %3C%3C %22%5Cn%22;%0A         // desligar e sua simplicidade sempre %C3%A9 f%C3%A1cil%0A    %7D%0A%0A    void usar(int tempo) %7B%0A        %0A        if(ligado == false)%7B%0A            std::cout %3C%3C %22fail: desligado%22 %3C%3C %22%5Cn%22;%0A            return;%0A        %7D%0A%0A        %0A        //bool bateriaCarregada = false;%0A        if(bateria != nullptr\n #include %3Ciostre\n@@ -9668,8 +9668,2777 @@\n %7D    %0A%7D%0A\n+) %7B%0A            //bateriaCarregada = bateria -%3E usar(tempo);%0A            //bool conseguirUsar = bateria -%3E usar(tempo);%0A%0A            if(bateria -%3E usar(tempo) == false) %7B%0A                std::cout %3C%3C %22fail: descarregou%22 %3C%3C %22%5Cn%22;%0A                desligar();%0A                return;%0A            %7D%0A        %7D%0A        else if(carregador == nullptr) %7B%0A            desligar();%0A            return;%0A        %7D%0A        %0A        tempoUso += tempo;%0A        if(carregador != nullptr && bateria != nullptr) %7B%0A                bateria -%3E carregar(carregador -%3E getPotencia(), tempo);%0A                //tempoUso += tempo;%0A        %7D%0A        %0A            %0A    %7D%0A%0A    void mostrar() %7B%0A        %0A        std::cout %3C%3C %22Notebook: %22;%0A        if (ligado != false) %7B%0A            std::cout %3C%3C %22ligado por %22 %3C%3C tempoUso %3C%3C %22 min%22;%0A        %7D %0A        else %7B%0A            std::cout %3C%3C %22desligado%22;%0A        %7D%0A%0A        if(carregador != nullptr) %7B%0A            std::cout %3C%3C %22, %22;%0A            carregador -%3E mostrar();%0A        %7D%0A%0A        if(bateria != nullptr) %7B%0A            std::cout %3C%3C %22, %22;%0A            bateria -%3E mostrar();%0A        %7D%0A%0A        std::cout %3C%3C %22%5Cn%22;%0A    %7D%0A%7D;%0A%0A%0Aint main() %7B%0A%0A    Notebook AcerNitro;    %0A%0A    while (true) %7B%0A%0A        std::string line, cmd;%0A        getline(std::cin, line);%0A        std::cout %3C%3C %22$%22 %3C%3C line %3C%3C %22%5Cn%22;%0A%0A        std::stringstream ss(line);%0A        ss %3E%3E cmd;%0A%0A        if (cmd == %22end%22) %7B%0A            break;%0A        %7D %0A%0A        else if (cmd == %22show%22) %7B %0A            AcerNitro.mostrar();%0A        %7D %0A%0A        else if (cmd == %22turn_on%22) %7B %0A            AcerNitro.ligar();%0A        %7D%0A%0A        else if (cmd == %22turn_off%22) %7B %0A            AcerNitro.desligar();%0A        %7D %0A%0A        else if (cmd == %22use%22) %7B %0A            int minutes;%0A            ss %3E%3E minutes;%0A            AcerNitro.usar(minutes);%0A        %7D %0A%0A        else if (cmd == %22set_charger%22) %7B%0A%0A            // CRIE UM OBJETO Charger E ATRIBUA AO NOTEBOOK%0A            int power;%0A            ss %3E%3E power;%0A            Carregador* novoCarregador = new Carregador(power);%0A            AcerNitro.setCarregador(novoCarregador);%0A        %7D %0A%0A        else if (cmd == %22rm_charger%22) %7B%0A%0A            // REMOVA O CARREGADOR DO NOTEBOOK E IMPRIMA SE ELE EXISTIR%0A            AcerNitro.rmCarregador();%0A        %7D %0A%0A        else if (cmd == %22set_battery%22) %7B%0A%0A            // CRIE UM OBJETO Bateria E ATRIBUA AO NOTEBOOK%0A            int capacity;%0A            ss %3E%3E capacity;%0A            Bateria* novaBateria = new Bateria(capacity);%0A            AcerNitro.setBateria(novaBateria);%0A        %7D %0A        else if (cmd == %22rm_battery%22) %7B%0A%0A            // REMOVA A BATERIA DO NOTEBOOK E IMPRIMA SE ELA EXISTIR%0A            AcerNitro.rmBateria();%0A        %7D %0A        else %7B%0A            std::cout %3C%3C %22fail: comando inv%C3%A1lido%22 %3C%3C %22%5Cn%22;%0A        %7D%0A    %7D    %0A%7D%0A\n"
        },
        {
            "label": "2025-03-12_15-48-32",
            "content": "@@ -2152,44 +2152,8 @@\n n%22;%0A\n-        if(carregador == nullptr) %7B%0A\n     \n@@ -2164,34 +2164,24 @@\n desligar();%0A\n-        %7D%0A\n         retu\n"
        },
        {
            "label": "2025-03-12_15-50-39",
            "content": "@@ -13,16 +13,35 @@\n stream%3E%0A\n+#include %3Csstream%3E%0A\n #include\n@@ -73,44 +73,34 @@\n ty%3E%0A\n-#include %22fn.hpp%22%0A%0A%0Aclass Bateria%0A%7B%0A\n+%0A%0Aclass Carregador %7B%0A%0A    \n priv\n@@ -104,24 +104,25 @@\n rivate:%0A\n+%0A\n     int \n carga_ma\n@@ -117,59 +117,31 @@\n int \n-carga_max,carga_atual;%0A    bool tem_carga;%0A\n+potencia;%0A%0A    \n public:%0A\n     \n@@ -140,289 +140,107 @@\n ic:%0A\n-    \n %0A    \n-Bateria(int max = 50, int atual = 50)%7B%0A        this-%3Ecarga_max = max;%0A        this-%3Ecarga_atual = atual;%0A        tem_carga = true;%0A    %7D%0A%0A    void set_Bateria(int max)%7B%0A%0A        this-%3Ecarga_max = max;%0A        this-%3Ecarga_atual = max;%0A        this-%3Etem_carga = true\n+Carregador(int pot) : potencia(pot) %7B%7D%0A%0A    int getPotencia() %7B%0A        return potencia\n ;%0A    %7D\n- \n %0A%0A  \n@@ -250,543 +250,81 @@\n oid \n-gastar(int x)%7B%0A        carga_atual -= x;%0A        if (carga_atual %3C= 0)%0A        %7B%0A            carga_atual = 0;%0A            std::cout %3C%3C %22fail: descarregou%5Cn%22;%0A            tem_carga = false;%0A        %7D%0A        %0A    %7D%0A%0A    bool carga_chk()%7B%0A        return tem_carga;%0A    %7D%0A%0A    void recarregar(int x)%7B%0A        carga_atual += x;%0A        if (carga_atual %3E carga_max)%0A        %7B%0A            carga_atual = carga_max;%0A        %7D%0A                %0A    %7D%0A%0A    std::string str() const%7B%0A        return fn::format(%22%7B%7D/%7B%7D%22,carga_atual,carga_max)\n+mostrar() %7B%0A        std::cout %3C%3C %22Carregador %22 %3C%3C potencia %3C%3C %22W%22\n ;%0A    %7D%0A\n %0A%7D;%0A\n@@ -315,25 +315,24 @@\n  %22W%22;%0A    %7D%0A\n-%0A\n %7D;%0A%0Aclass Ca\n@@ -333,21 +333,23 @@\n ass \n-Carregador%0A%7B%0A\n+Bateria %7B%0A%0A    \n priv\n@@ -353,16 +353,17 @@\n rivate:%0A\n+%0A\n     int \n@@ -367,91 +367,131 @@\n nt c\n-h\n arg\n-er\n+a\n ;%0A    \n-bool esta_carregando;%0Apublic:%0A%0A    Carregador(int x = 0,bool y = false)\n+int capacidade;%0A%0A    public:%0A%0A    Bateria(int capMax) : carga(capMax), capacidade(capMax) %7B%7D%0A%0A    int getCarga() \n %7B%0A  \n@@ -500,56 +500,87 @@\n     \n+return \n c\n-h\n arg\n-er = x\n+a\n ;%0A    \n+%7D%0A%0A\n     \n-esta_carregando = y\n+int getCapacidade() %7B%0A        return capacidade\n ;%0A    %7D\n-;\n %0A%0A  \n@@ -590,50 +590,129 @@\n oid \n-set_charger(int x)%7B%0A        charger = x;%0A%0A\n+carregar(int potencia, int tempo) %7B%0A        %0A        if(carga %3C capacidade) %7B%0A            carga += potencia * tempo;%0A    \n     \n@@ -721,73 +721,78 @@\n   if\n- \n (c\n-h\n arg\n-er)%0A        %7B%0A            esta_carregando = true;%0A\n+a %3E capacidade) %7B%0A                carga = capacidade;%0A   \n         \n %7D%0A  \n@@ -779,32 +779,33 @@\n ade;%0A           \n+ \n %7D%0A        %0A    %7D\n@@ -790,32 +790,33 @@\n       %7D%0A        \n+%7D\n %0A    %7D%0A%0A    void\n@@ -815,6125 +815,5451 @@\n     \n-void rm_charger()%7B%0A        esta_carregando = false;%0A        charger = 0\n+bool usar(int tempo) %7B%0A        if(carga %3E tempo) %7B%0A            //std::cout %3C%3C %22Usando por %22 %3C%3C tempo %3C%3C %22 minutos%22 %3C%3C %22%5Cn%22\n ;%0A    \n-%7D%0A%0A\n     \n-int get_charger()%7B%0A        return charger;%0A    %7D%0A%0A    bool chk()%7B%0A        return esta_carregando;%0A%0A    %7D%0A%0A    std::string str() const%7B%0A        return fn::format(%22, Carregador %7B%7DW%22,this-%3Echarger);%0A    %7D%0A%7D;%0A%0A%0A%0Aclass Notebook%0A%7B%0Aprivate:%0A%0A    std::shared_ptr%3CBateria%3E Pilha %7Bnullptr%7D;%0A    std::shared_ptr%3CCarregador%3E cabo %7Bnullptr%7D;%0A    bool esta_ligado,tem_bateria;%0A    int tempo;%0Apublic:%0A    %0A    Notebook()%7B%0A        esta_ligado = false;%0A        tem_bateria = false;%0A        tempo = 0;%0A    %7D;%0A%0A%0A    void turn_off()%7B esta_ligado = 0;%7D%0A%0A    void turn_on()%7B%0A%0A        if (%0A            (cabo == nullptr) &&%0A            (Pilha == nullptr)%0A        )%0A        %7B%0A            std::cout %3C%3C %22fail: n%C3%A3o foi poss%C3%ADvel ligar%5Cn%22;%0A            return;%0A        %7D%0A        %0A        %0A        %0A        esta_ligado = 1;%0A        %7D%0A%0A    void use(int x)%7B%0A        %0A%0A        if (!esta_ligado)%0A        %7B%0A            std::cout %3C%3C %22fail: desligado%5Cn%22;%0A            return;%0A        %7D%0A%0A        if (%0A            (cabo == nullptr) &&%0A            (Pilha == nullptr)%0A        )%0A        %7B%0A            std::cout %3C%3C %22fail: sem energia%5Cn%22;%0A            return;%0A        %7D%0A%0A        tempo += x;%0A%0A        if (Pilha != nullptr)%0A        %7B%0A%0A            if (cabo == nullptr)%0A            %7B%0A               Pilha-%3Egastar(x);%0A%0A                if (!Pilha-%3Ecarga_chk())%0A                %7B%0A                    esta_ligado = false;%0A                %7D%0A            %7Delse%7B%0A%0A                Pilha-%3Erecarregar(x * cabo-%3Eget_charger());%0A            %7D%0A            %0A            %0A%0A%0A            %0A        %7D%0A        %0A%0A%0A%0A        if (cabo != nullptr)%0A        %7B%0A            return;%0A        %7D%0A        %0A       %0A    %7D%0A%0A    void set_bateria(std::shared_ptr%3CBateria%3E pilha)%7B%0A        this-%3EPilha = pilha;%0A        tem_bateria = true;%0A    %7D%0A%0A    std::shared_ptr%3CBateria%3E rm_bateria()%7B%0A        %0A        if (Pilha == nullptr)%0A        %7B%0A            std::cout %3C%3C %22fail: Sem bateria%5Cn%22;%0A            return nullptr;%0A        %7D%0A        %0A        std::string Pilha_str = Pilha-%3Estr();%0A%0A        std::cout %3C%3C %22Removido %22 %3C%3C Pilha_str %3C%3C %22%5Cn%22;%0A    %0A        tem_bateria = false;%0A%0A        if (cabo == nullptr)%0A        %7B%0A%0A            esta_ligado = false;%0A        %7D%0A        %0A%0A        auto old_pilha = Pilha;%0A%0A        Pilha = nullptr;%0A        return old_pilha;%0A%0A    %7D%0A%0A    void set_charger(std::shared_ptr%3CCarregador%3E cabo)%7B%0A%0A        if (this-%3Ecabo != nullptr)%0A        %7B%0A            std::cout %3C%3C %22fail: carregador j%C3%A1 conectado%5Cn%22;%0A            return;%0A        %7D%0A        %0A%0A        this-%3Ecabo = cabo;%0A    %7D%0A%0A    std::shared_ptr%3CCarregador%3E rm_charger()%7B%0A%0A        if (cabo == nullptr)%0A        %7B%0A            std::cout %3C%3C %22fail: Sem carregador%5Cn%22;%0A            return nullptr;%0A        %7D%0A        %0A        std::cout %3C%3C %22Removido %22 %3C%3C cabo-%3Eget_charger() %3C%3C %22W%5Cn%22;%0A        %0A%0A        cabo-%3Erm_charger();%0A        esta_ligado = false;%0A%0A        auto old_cabo = cabo;%0A        cabo = nullptr;%0A        return old_cabo;%0A        %0A    %7D%0A%0A    std::string str() const%7B%0A        std::string status(%22desligado%22);%0A        std::string Carregador_str(%22%22);%0A        std::string bateria_str(%22%22);%0A%0A        if (cabo != nullptr)%0A        %7B%0A            %0A            Carregador_str = cabo-%3Estr();%0A        %7D%0A        %0A        if (Pilha != nullptr)%0A        %7B%0A            bateria_str = %22, Bateria %22;%0A            bateria_str += Pilha-%3Estr();%0A        %7D%0A        %0A        %0A        if (esta_ligado)%0A        %7B%0A            return fn::format(%22Notebook: ligado por %7B%7D min%7B%7D%7B%7D%22, tempo,Carregador_str,bateria_str);%0A        %7D%0A%0A        return fn::format(%22Notebook: %7B%7D%7B%7D%7B%7D%22, status,Carregador_str,bateria_str); %0A%0A        //%0A%0A    %7D%0A%0A%7D;%0A%0Astd::ostream& operator%3C%3C(std::ostream& os, const Notebook& note)%7B%0A    return os %3C%3C note.str();%0A%7D%0A%0Aclass Adapter %7B%0A    Notebook notebook;%0Apublic:%0A    void show() %7B%0A        fn::write(notebook);%0A        // std::cout %3C%3C notebook.str() %3C%3C '%5Cn';%0A    %7D%0A%0A    void turn_on() %7B%0A        notebook.turn_on();%0A    %7D%0A%0A    void turn_off() %7B%0A        notebook.turn_off();%0A    %7D%0A%0A    void set_charger(int power) %7B%0A        auto carregador_externo = std::make_shared%3CCarregador%3E(power);%0A        notebook.set_charger(carregador_externo);%0A    %7D%0A    void rm_charger() %7B%0A        auto old_charger = notebook.rm_charger();%0A%0A        // auto charger = notebook.rmCharger();%0A        // if (charger != nullptr) %7B%0A        //     std::cout %3C%3C %22Removido %22 %3C%3C charger-%3Estr() %3C%3C '%5Cn';%0A        // %7D else %7B%0A        //     std::cout %3C%3C %22fail: Sem carregador%5Cn%22;%0A        // %7D%0A    %7D%0A    void set_battery(int capacity) %7B%0A        auto bateria_externa = std::make_shared%3CBateria%3E(capacity,capacity);%0A        notebook.set_bateria(bateria_externa);%0A        //TODO: Implementar%0A    %7D%0A%0A    void rm_battery() %7B%0A        auto old_bateria = notebook.rm_bateria();%0A%0A        // auto battery = notebook.rmBattery();%0A        // if (battery != nullptr) %7B%0A        //     std::cout %3C%3C %22Removido %22 %3C%3C battery-%3Estr() %3C%3C '%5Cn';%0A        // %7D else %7B%0A        //     std::cout %3C%3C %22fail: Sem bateria%5Cn%22;%0A        // %7D%0A    %7D%0A%0A    void use(int minutes) %7B%0A%0A        notebook.use(minutes);%0A    %7D%0A%7D;%0A%0Aint main() %7B%0A%0A    Adapter adp;%0A    while (true) %7B%0A        auto line = fn::input();%0A        auto args = fn::split(line, ' ');%0A        fn::write(%22$%22 + line);%0A%0A        if      (args%5B0%5D == %22end%22)         %7B break;                                   %7D%0A        else if (args%5B0%5D == %22show%22)        %7B adp.show();                              %7D%0A        else if (args%5B0%5D == %22turn_on%22)     %7B adp.turn_on();                           %7D%0A        else if (args%5B0%5D == %22turn_off%22)    %7B adp.turn_off();                          %7D%0A        else if (args%5B0%5D == %22use%22)         %7B adp.use(+args%5B1%5D);                       %7D%0A        else if (args%5B0%5D == %22set_charger%22) %7B adp.set_charger(+args%5B1%5D);               %7D%0A        else if (args%5B0%5D == %22rm_charger%22)  %7B adp.rm_charger();                        %7D%0A        else if (args%5B0%5D == %22set_battery%22) %7B adp.set_battery(+args%5B1%5D);               %7D%0A        else if (args%5B0%5D == %22rm_battery%22)  %7B adp.rm_battery();                        %7D%0A        else                               %7B std::cout %3C%3C %22fail: comando inv%C3%A1lido%5Cn%22;\n+    carga -= tempo;%0A            return true;%0A        %7D%0A        else %7B%0A%0A            ///std::cout %3C%3C %22Usando por %22 %3C%3C carga %3C%3C %22minuto, descarregou%22 %3C%3C %22%5Cn%22;%0A            carga = 0;%0A            return false;%0A        %7D%0A    %7D%0A%0A    void mostrar() %7B%0A        std::cout %3C%3C %22Bateria %22 %3C%3C carga %3C%3C %22/%22 %3C%3C capacidade;%0A    %7D%0A%7D;%0A%0A%0A%0Aclass Notebook %7B%0A%0A    private:%0A%0A    bool ligado;%0A    int tempoUso;%0A%0A    Bateria* bateria;%0A    Carregador* carregador;%0A%0A    public:%0A%0A    Notebook() : ligado(false),tempoUso(0), bateria(nullptr), carregador(nullptr) %7B%7D%0A%0A    void setBateria(Bateria* novaBateria) %7B%0A        bateria = novaBateria;%0A    %7D%0A%0A    void setCarregador(Carregador* novoCarregador) %7B%0A        if(carregador != nullptr) %7B%0A            std::cout %3C%3C %22fail: carregador j%C3%A1 conectado%22 %3C%3C %22%5Cn%22;%0A            return;%0A        %7D%0A        carregador = novoCarregador;%0A    %7D%0A%0A    Bateria* rmBateria() %7B%0A        %0A        if(bateria == nullptr) %7B%0A            std::cout %3C%3C %22fail: Sem bateria%22 %3C%3C %22%5Cn%22;%0A            return nullptr;%0A        %7D%0A%0A        Bateria* temp = bateria;%0A        bateria = nullptr;%0A        std::cout %3C%3C %22Removido %22;%0A        std::cout %3C%3C temp -%3E getCarga() %3C%3C %22/%22 %3C%3C temp -%3E getCapacidade();%0A        std::cout %3C%3C %22%5Cn%22;%0A        if(carregador == nullptr) %7B%0A        desligar();%0A        %7D%0A        return nullptr;%0A    %7D%0A%0A    Carregador* rmCarregador() %7B //adi%C3%A7%C3%A3o de m%C3%A9todo que n%C3%A3o estava pedindo na vers%C3%A3o sem testes definidos%0A        %0A        if(carregador == nullptr) %7B%0A            std::cout %3C%3C %22fail: Sem carregador%22 %3C%3C %22%5Cn%22;%0A            return nullptr;%0A        %7D%0A%0A        Carregador* temp = carregador;%0A        carregador = nullptr;%0A%0A        std::cout %3C%3C %22Removido %22 %3C%3C temp -%3E getPotencia() %3C%3C %22W%22 %3C%3C %22%5Cn%22;%0A%0A        if(bateria == nullptr %7C%7C bateria -%3E getCarga() == 0) %7B%0A            desligar();%0A        %7D%0A        // temp -%3E mostrar();%0A        // std::cout %3C%3C %22%5Cn%22;%0A        return temp;%0A    %7D%0A%0A    void ligar() %7B%0A        if((bateria && bateria -%3E getCarga() %3E 0) %7C%7C carregador) %7B%0A            ligado = true;%0A            //std::cout %3C%3C %22notebook ligado%22 %3C%3C %22%5Cn%22;%0A        %7D%0A        else %7B%0A            std::cout %3C%3C %22fail: n%C3%A3o foi poss%C3%ADvel ligar%22 %3C%3C %22%5Cn%22;%0A        %7D%0A    %7D%0A%0A    void desligar() %7B%0A        ligado = false;%0A        //std::cout %3C%3C %22notebook desligado%22 %3C%3C %22%5Cn%22;%0A         // desligar e sua simplicidade sempre %C3%A9 f%C3%A1cil%0A    %7D%0A%0A    void usar(int tempo) %7B%0A        %0A        if(ligado == false)%7B%0A            std::cout %3C%3C %22fail: desligado%22 %3C%3C %22%5Cn%22;%0A            return;%0A        %7D%0A%0A        %0A        //bool bateriaCarregada = false;%0A        if(bateria != nullptr && carregador == nullptr) %7B%0A            //bateriaCarregada = bateria -%3E usar(tempo);%0A            //bool conseguirUsar = bateria -%3E usar(tempo);%0A%0A            if(bateria -%3E usar(tempo) == false) %7B%0A                std::cout %3C%3C %22fail: descarregou%22 %3C%3C %22%5Cn%22;%0A                desligar();%0A                return;%0A            %7D%0A        %7D%0A        else if(carregador == nullptr) %7B%0A            desligar();%0A            return;%0A        %7D%0A        %0A        tempoUso += tempo;%0A        if(carregador != nullptr && bateria != nullptr) %7B%0A                bateria -%3E carregar(carregador -%3E getPotencia(), tempo);%0A                //tempoUso += tempo;%0A        %7D%0A            %0A    %7D%0A%0A    void mostrar() %7B%0A        %0A        std::cout %3C%3C %22Notebook: %22;%0A        if (ligado != false) %7B%0A            std::cout %3C%3C %22ligado por %22 %3C%3C tempoUso %3C%3C %22 min%22;%0A        %7D %0A        else %7B%0A            std::cout %3C%3C %22desligado%22;%0A        %7D%0A%0A        if(carregador != nullptr) %7B%0A            std::cout %3C%3C %22, %22;%0A            carregador -%3E mostrar();%0A        %7D%0A%0A        if(bateria != nullptr) %7B%0A            std::cout %3C%3C %22, %22;%0A            bateria -%3E mostrar();%0A        %7D%0A%0A        std::cout %3C%3C %22%5Cn%22;%0A    %7D%0A%7D;%0A%0A%0Aint main() %7B%0A%0A    Notebook AcerNitro;    %0A%0A    while (true) %7B%0A%0A        std::string line, cmd;%0A        getline(std::cin, line);%0A        std::cout %3C%3C %22$%22 %3C%3C line %3C%3C %22%5Cn%22;%0A%0A        std::stringstream ss(line);%0A        ss %3E%3E cmd;%0A%0A        if (cmd == %22end%22) %7B%0A            break;%0A        %7D %0A%0A        else if (cmd == %22show%22) %7B %0A            AcerNitro.mostrar();%0A        %7D %0A%0A        else if (cmd == %22turn_on%22) %7B %0A            AcerNitro.ligar();%0A        %7D%0A%0A        else if (cmd == %22turn_off%22) %7B %0A            AcerNitro.desligar();%0A        %7D %0A%0A        else if (cmd == %22use%22) %7B %0A            int minutes;%0A            ss %3E%3E minutes;%0A            AcerNitro.usar(minutes);%0A        %7D %0A%0A        else if (cmd == %22set_charger%22) %7B%0A%0A            // CRIE UM OBJETO Charger E ATRIBUA AO NOTEBOOK%0A            int power;%0A            ss %3E%3E power;%0A            Carregador* novoCarregador = new Carregador(power);%0A            AcerNitro.setCarregador(novoCarregador);%0A        %7D %0A%0A        else if (cmd == %22rm_charger%22) %7B%0A%0A            // REMOVA O CARREGADOR DO NOTEBOOK E IMPRIMA SE ELE EXISTIR%0A            AcerNitro.rmCarregador();%0A        %7D %0A%0A        else if (cmd == %22set_battery%22) %7B%0A%0A            // CRIE UM OBJETO Bateria E ATRIBUA AO NOTEBOOK%0A            int capacity;%0A            ss %3E%3E capacity;%0A            Bateria* novaBateria = new Bateria(capacity);%0A            AcerNitro.setBateria(novaBateria);%0A        %7D %0A        else if (cmd == %22rm_battery%22) %7B%0A%0A            // REMOVA A BATERIA DO NOTEBOOK E IMPRIMA SE ELA EXISTIR%0A            AcerNitro.rmBateria();%0A        %7D %0A        else %7B%0A            std::cout %3C%3C %22fail: comando inv%C3%A1lido%22 %3C%3C %22%5Cn%22;%0A       \n  %7D%0A \n"
        },
        {
            "label": "2025-03-12_15-51-29",
            "content": "#include <iostream>\n#include <memory>\n#include <utility>\n#include \"fn.hpp\"\n\n\nclass Bateria\n{\nprivate:\n    int carga_max,carga_atual;\n    bool tem_carga;\npublic:\n    \n    Bateria(int max = 50, int atual = 50){\n        this->carga_max = max;\n        this->carga_atual = atual;\n        tem_carga = true;\n    }\n\n    void set_Bateria(int max){\n\n        this->carga_max = max;\n        this->carga_atual = max;\n        this->tem_carga = true;\n    } \n\n    void gastar(int x){\n        carga_atual -= x;\n        if (carga_atual <= 0)\n        {\n            carga_atual = 0;\n            std::cout << \"fail: descarregou\\n\";\n            tem_carga = false;\n        }\n        \n    }\n\n    bool carga_chk(){\n        return tem_carga;\n    }\n\n    void recarregar(int x){\n        carga_atual += x;\n        if (carga_atual > carga_max)\n        {\n            carga_atual = carga_max;\n        }\n                \n    }\n\n    std::string str() const{\n        return fn::format(\"{}/{}\",carga_atual,carga_max);\n    }\n\n};\n\nclass Carregador\n{\nprivate:\n    int charger;\n    bool esta_carregando;\npublic:\n\n    Carregador(int x = 0,bool y = false){\n        charger = x;\n        esta_carregando = y;\n    };\n\n    void set_charger(int x){\n        charger = x;\n\n        if (charger)\n        {\n            esta_carregando = true;\n        }\n        \n    }\n\n    void rm_charger(){\n        esta_carregando = false;\n        charger = 0;\n    }\n\n    int get_charger(){\n        return charger;\n    }\n\n    bool chk(){\n        return esta_carregando;\n\n    }\n\n    std::string str() const{\n        return fn::format(\", Carregador {}W\",this->charger);\n    }\n};\n\n\n\nclass Notebook\n{\nprivate:\n\n    std::shared_ptr<Bateria> Pilha {nullptr};\n    std::shared_ptr<Carregador> cabo {nullptr};\n    bool esta_ligado,tem_bateria;\n    int tempo;\npublic:\n    \n    Notebook(){\n        esta_ligado = false;\n        tem_bateria = false;\n        tempo = 0;\n    };\n\n\n    void turn_off(){ esta_ligado = 0;}\n\n    void turn_on(){\n\n        if (\n            (cabo == nullptr) &&\n            (Pilha == nullptr)\n        )\n        {\n            std::cout << \"fail: n\u00e3o foi poss\u00edvel ligar\\n\";\n            return;\n        }\n        \n        \n        \n        esta_ligado = 1;\n        }\n\n    void use(int x){\n        \n\n        if (!esta_ligado)\n        {\n            std::cout << \"fail: desligado\\n\";\n            return;\n        }\n\n        if (\n            (cabo == nullptr) &&\n            (Pilha == nullptr)\n        )\n        {\n            std::cout << \"fail: sem energia\\n\";\n            return;\n        }\n\n        tempo += x;\n\n        if (Pilha != nullptr)\n        {\n\n            if (cabo == nullptr)\n            {\n               Pilha->gastar(x);\n\n                if (!Pilha->carga_chk())\n                {\n                    esta_ligado = false;\n                }\n            }else{\n\n                Pilha->recarregar(x * cabo->get_charger());\n            }\n            \n            \n\n\n            \n        }\n        \n\n\n\n        if (cabo != nullptr)\n        {\n            return;\n        }\n        \n       \n    }\n\n    void set_bateria(std::shared_ptr<Bateria> pilha){\n        this->Pilha = pilha;\n        tem_bateria = true;\n    }\n\n    std::shared_ptr<Bateria> rm_bateria(){\n        \n        if (Pilha == nullptr)\n        {\n            std::cout << \"fail: Sem bateria\\n\";\n            return nullptr;\n        }\n        \n        std::string Pilha_str = Pilha->str();\n\n        std::cout << \"Removido \" << Pilha_str << \"\\n\";\n    \n        tem_bateria = false;\n\n        if (cabo == nullptr)\n        {\n\n            esta_ligado = false;\n        }\n        \n\n        auto old_pilha = Pilha;\n\n        Pilha = nullptr;\n        return old_pilha;\n\n    }\n\n    void set_charger(std::shared_ptr<Carregador> cabo){\n\n        if (this->cabo != nullptr)\n        {\n            std::cout << \"fail: carregador j\u00e1 conectado\\n\";\n            return;\n        }\n        \n\n        this->cabo = cabo;\n    }\n\n    std::shared_ptr<Carregador> rm_charger(){\n\n        if (cabo == nullptr)\n        {\n            std::cout << \"fail: Sem carregador\\n\";\n            return nullptr;\n        }\n        \n        std::cout << \"Removido \" << cabo->get_charger() << \"W\\n\";\n        \n\n        cabo->rm_charger();\n        esta_ligado = false;\n\n        auto old_cabo = cabo;\n        cabo = nullptr;\n        return old_cabo;\n        \n    }\n\n    std::string str() const{\n        std::string status(\"desligado\");\n        std::string Carregador_str(\"\");\n        std::string bateria_str(\"\");\n\n        if (cabo != nullptr)\n        {\n            \n            Carregador_str = cabo->str();\n        }\n        \n        if (Pilha != nullptr)\n        {\n            bateria_str = \", Bateria \";\n            bateria_str += Pilha->str();\n        }\n        \n        \n        if (esta_ligado)\n        {\n            return fn::format(\"Notebook: ligado por {} min{}{}\", tempo,Carregador_str,bateria_str);\n        }\n\n        return fn::format(\"Notebook: {}{}{}\", status,Carregador_str,bateria_str); \n\n        //\n\n    }\n\n};\n\nstd::ostream& operator<<(std::ostream& os, const Notebook& note){\n    return os << note.str();\n}\n\nclass Adapter {\n    Notebook notebook;\npublic:\n    void show() {\n        fn::write(notebook);\n        // std::cout << notebook.str() << '\\n';\n    }\n\n    void turn_on() {\n        notebook.turn_on();\n    }\n\n    void turn_off() {\n        notebook.turn_off();\n    }\n\n    void set_charger(int power) {\n        auto carregador_externo = std::make_shared<Carregador>(power);\n        notebook.set_charger(carregador_externo);\n    }\n    void rm_charger() {\n        auto old_charger = notebook.rm_charger();\n\n        // auto charger = notebook.rmCharger();\n        // if (charger != nullptr) {\n        //     std::cout << \"Removido \" << charger->str() << '\\n';\n        // } else {\n        //     std::cout << \"fail: Sem carregador\\n\";\n        // }\n    }\n    void set_battery(int capacity) {\n        auto bateria_externa = std::make_shared<Bateria>(capacity,capacity);\n        notebook.set_bateria(bateria_externa);\n        //TODO: Implementar\n    }\n\n    void rm_battery() {\n        auto old_bateria = notebook.rm_bateria();\n\n        // auto battery = notebook.rmBattery();\n        // if (battery != nullptr) {\n        //     std::cout << \"Removido \" << battery->str() << '\\n';\n        // } else {\n        //     std::cout << \"fail: Sem bateria\\n\";\n        // }\n    }\n\n    void use(int minutes) {\n\n        notebook.use(minutes);\n    }\n};\n\nint main() {\n\n    Adapter adp;\n    while (true) {\n        auto line = fn::input();\n        auto args = fn::split(line, ' ');\n        fn::write(\"$\" + line);\n\n        if      (args[0] == \"end\")         { break;                                   }\n        else if (args[0] == \"show\")        { adp.show();                              }\n        else if (args[0] == \"turn_on\")     { adp.turn_on();                           }\n        else if (args[0] == \"turn_off\")    { adp.turn_off();                          }\n        else if (args[0] == \"use\")         { adp.use(+args[1]);                       }\n        else if (args[0] == \"set_charger\") { adp.set_charger(+args[1]);               }\n        else if (args[0] == \"rm_charger\")  { adp.rm_charger();                        }\n        else if (args[0] == \"set_battery\") { adp.set_battery(+args[1]);               }\n        else if (args[0] == \"rm_battery\")  { adp.rm_battery();                        }\n        else                               { std::cout << \"fail: comando inv\u00e1lido\\n\"; }\n    }    \n}\n"
        }
    ]
}